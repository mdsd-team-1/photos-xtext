grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

generate myDsl "http://www.xtext.org/example/mydsl/MyDsl"

//System
Model:
'System' ':' '{' elements+=Domain elements+=Architecture elements+=Technology '}';

// Domain
Domain:
'Domain' name=ID ':' '{' elements+=Entity elements+=Functionality elements+=DomainConnection '}';

// Domain - Entities
Entity:
'Entities' ':' '{' (elements+=Entities) '}';

Entities:
(elements+=Photo)+ (elements+=Album)+ (elements+=UserDomain)+;

Photo:
'Photo' name=ID;

Album:
'Album' name=ID;

UserDomain:
'UserDomain' name=ID;

// Domain - Functionalities
Functionality:
'Functionalities' ':' '{' (elements+=Functionalities) '}';

Functionalities:
functions+=ProfileManagement 
elements+=AppAccess
items+=AlbumManagement
resources+=PhotoActions
aditionals+=LandingActions;

ProfileManagement:
'ProfileManagement' ':' items+=ProfileManagementFunctions;

ProfileManagementFunctions:
'ViewProfilePhoto' name=ID 'EditProfileInfo' name=ID;

AppAccess:
'AppAccess' ':' items+=AppAccessFunctions;

AppAccessFunctions:
'Login' name=ID 'Register' name=ID;

AlbumManagement:
'AlbumManagement' ':'items+=AlbumManagementFunctions;

AlbumManagementFunctions:
'CreateAlbum' name=ID 'SelectAlbum' name=ID;

PhotoActions:
'PhotoActions' ':'items+=PhotoActionsFunctions;

PhotoActionsFunctions:
'ViewAllPhotos' name=ID 'ViewExtendedPhoto' name=ID 'LoadPhoto' name=ID;

LandingActions:
'LandingActions' ':'items+=LandingFunctions;

LandingFunctions:
'ViewCarousel' name=ID 'PassPhoto' name=ID;


//Domain - Relations
DomainConnection:
'DomainRelations' ':' '{' elements+=DomainRelations '}';

DomainRelations:
elements+=UserDomain name=ID ':' '{' elements+=Functionalities '}'
elements+=Album name=ID ':' '{' elements+=AlbumManagementFunctions '}'
elements+=Photo name=ID ':' '{' elements+=PhotoActionsFunctions '}'
elements+=PhotoActions name=ID  ':' '{'elements+=AlbumManagement '}';
		
//Architecture
Architecture:
'Architecture:' '{' name=ID '}';

//Technology
Technology:
'Technology' name=ID ':' '{' elements+=Technologies '}';

Technologies:
factors+=Spring factors+=React factors+=PostgreSQL factors+=AmazonWebServices;

React:
'React' name=ID ':' '{' reacts+=ReactModules '}';

ReactModules:
'ReactModules' ':' '{' reactmodules+=ReactSubModules '}';

ReactSubModules:
reactmodules+=ReactConfiguration
reactmodules+=ReactComponents
reactmodules+=ReactActions
reactmodules+=ReactLibraries
reactmodules+=ReactInfo
;

ReactConfiguration:
'ReactConfiguration' ':' '{' dependencies+=ReactDependencies configurations+=ReactConfigurations '}';

ReactDependencies:
'DependenciesStruct' (dependencies+=ReactDependenciesRules)+;

ReactDependenciesRules:
'DependencyType' name=ID (dependencies+=ReactDependenciesSubRules)+;

ReactDependenciesSubRules:
(dependencies+=SingleDependencies);

SingleDependencies:
(dependencies+=PackageName) (dependencies+=PackageVersion);

PackageName:
'PackageName' name=ID;

PackageVersion:
'PackageVersion' name=ID;	

ReactConfigurations:
'ReactDOMConfigurations' name=ID (configurations+=DOMConfigurations)+;

DOMConfigurations:
(elements+=DOMTypeConf) name=ID;

DOMTypeConf:
'RoutingConf' | 'ServiceWorker' | 'HTMLStructure' | 'Manifest' | 'RepositoriesConf';

ReactComponents:
'ReactComponents' ':' '{' componentslogic+=ComponentsLogic componentsui+=ComponentsUI '}';

ComponentsLogic:
'LogicComponents' name=ID logiccomponents+=LogicContent;

LogicContent:
'RoutingComponents' name=ID logiccomponents+=LogicStructure;

LogicStructure:
'AppComponent' name=ID logiccomponents+=ComponentClass 'IndexComponent' name=ID;

ComponentsUI:
'UIComponents' name=ID uicomponents+=UIContent;

UIContent: 
('ViewComponent' name=ID uicontent+=ComponentClass)+
('Subcomponents' name=ID uicontent+=ComponentClass)+;

ComponentClass:
componentclass+=ReactFunctions componentclass+=Props;

ReactFunctions:
componentclass+=ReactConstructor (lifecycleclass+=ReactLifeCycle)* (componentclass+=ReactCoreFunctions)* renderclass+=ReactRender;

ReactConstructor:
'Constructor' componentclass+=State (componentclass+=CoreFunctionsDeclaration)*;

State:
'State' (name=ID componentclass+=DataType)*;

DataType:
'String' | 'Array' | 'Object' | 'Number' | 'null' | 'Boolean';

CoreFunctionsDeclaration:
name=ID 'FunctionBindingDeclaration';

ReactLifeCycle:
'ComponentDidMount' 'FunctionStructure' |
'ComponentDidUpdate' 'FunctionStructure' |
'ComponentWillUnmount' 'FunctionStructure';

ReactRender:
'Render' 'RenderContent';

Props:
'Props' (name=ID componentclass+=DataType)*;

ReactCoreFunctions:
name=ID 'FunctionStructure';

ReactActions:
'ReactActions' ':' '{' reactactcontent+=ReactActionsContent '}';

ReactActionsContent:
(reactrelcontent+=ReactServicesRelation)+ ;
	
ReactServicesType:
'ServiceType' name=ID 'ServiceContent';

ReactServicesRelation:
'ServicesRelations' (reactrelationcontent+=ReactServicesType name=ID ReactRequest)+;

ReactRequest: 
'Wrapper' | 'AuxWrapper';

ReactLibraries:
'ReactLibraries' ':' '{' (reactlibraries+=ReactLibrary)+ '}';

ReactLibrary:
ReactLibraryType name=ID 'LibraryContent';

ReactLibraryType:
'ReactDesign' | 'ReactRouting' | 'ComponentManagement' |
'StoreManagement' | 'ReactDeployment' | 'ConfigurationLibrary';

ReactInfo:
'ReactInformation' ':' '{' (reactinformation+=ReactInformation)+ '}';

ReactInformation:
ReactInformationType name=ID 'InformationContent';

ReactInformationType:
'ReactReadme' | 'ReactAditionalInfo';

//Spring
Spring:
'Spring' name=ID;

PostgreSQL:
'PostgreSQL' name=ID;

AmazonWebServices: 
'AmazonWebServices' name=ID;
