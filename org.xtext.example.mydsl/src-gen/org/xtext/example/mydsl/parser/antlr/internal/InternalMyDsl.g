/*
 * generated by Xtext 2.18.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='System'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getSystemKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getModelAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementsDomainParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleDomain
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"org.xtext.example.mydsl.MyDsl.Domain");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementsArchitectureParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleArchitecture
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"org.xtext.example.mydsl.MyDsl.Architecture");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementsTechnologyParserRuleCall_5_0());
				}
				lv_elements_5_0=ruleTechnology
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_5_0,
						"org.xtext.example.mydsl.MyDsl.Technology");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDomain
entryRuleDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainRule()); }
	iv_ruleDomain=ruleDomain
	{ $current=$iv_ruleDomain.current; }
	EOF;

// Rule Domain
ruleDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Domain'
		{
			newLeafNode(otherlv_0, grammarAccess.getDomainAccess().getDomainKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDomainAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDomainRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDomainAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getDomainAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainAccess().getElementsEntityParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"org.xtext.example.mydsl.MyDsl.Entity");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainAccess().getElementsFunctionalityParserRuleCall_5_0());
				}
				lv_elements_5_0=ruleFunctionality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainRule());
					}
					add(
						$current,
						"elements",
						lv_elements_5_0,
						"org.xtext.example.mydsl.MyDsl.Functionality");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainAccess().getElementsDomainConnectionParserRuleCall_6_0());
				}
				lv_elements_6_0=ruleDomainConnection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainRule());
					}
					add(
						$current,
						"elements",
						lv_elements_6_0,
						"org.xtext.example.mydsl.MyDsl.DomainConnection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getDomainAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Entities'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntitiesKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getEntityAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getElementsEntitiesParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleEntities
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"org.xtext.example.mydsl.MyDsl.Entities");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEntities
entryRuleEntities returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntitiesRule()); }
	iv_ruleEntities=ruleEntities
	{ $current=$iv_ruleEntities.current; }
	EOF;

// Rule Entities
ruleEntities returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEntitiesAccess().getElementsPhotoParserRuleCall_0_0());
				}
				lv_elements_0_0=rulePhoto
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntitiesRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"org.xtext.example.mydsl.MyDsl.Photo");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getEntitiesAccess().getElementsAlbumParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleAlbum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntitiesRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.example.mydsl.MyDsl.Album");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getEntitiesAccess().getElementsUserDomainParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleUserDomain
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntitiesRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"org.xtext.example.mydsl.MyDsl.UserDomain");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRulePhoto
entryRulePhoto returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhotoRule()); }
	iv_rulePhoto=rulePhoto
	{ $current=$iv_rulePhoto.current; }
	EOF;

// Rule Photo
rulePhoto returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Photo'
		{
			newLeafNode(otherlv_0, grammarAccess.getPhotoAccess().getPhotoKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPhotoAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPhotoRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAlbum
entryRuleAlbum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlbumRule()); }
	iv_ruleAlbum=ruleAlbum
	{ $current=$iv_ruleAlbum.current; }
	EOF;

// Rule Album
ruleAlbum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Album'
		{
			newLeafNode(otherlv_0, grammarAccess.getAlbumAccess().getAlbumKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAlbumAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAlbumRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleUserDomain
entryRuleUserDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUserDomainRule()); }
	iv_ruleUserDomain=ruleUserDomain
	{ $current=$iv_ruleUserDomain.current; }
	EOF;

// Rule UserDomain
ruleUserDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='UserDomain'
		{
			newLeafNode(otherlv_0, grammarAccess.getUserDomainAccess().getUserDomainKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getUserDomainAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserDomainRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionality
entryRuleFunctionality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionalityRule()); }
	iv_ruleFunctionality=ruleFunctionality
	{ $current=$iv_ruleFunctionality.current; }
	EOF;

// Rule Functionality
ruleFunctionality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Functionalities'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionalityAccess().getFunctionalitiesKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionalityAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionalityAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionalityAccess().getElementsFunctionalitiesParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleFunctionalities
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionalityRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"org.xtext.example.mydsl.MyDsl.Functionalities");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getFunctionalityAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleFunctionalities
entryRuleFunctionalities returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionalitiesRule()); }
	iv_ruleFunctionalities=ruleFunctionalities
	{ $current=$iv_ruleFunctionalities.current; }
	EOF;

// Rule Functionalities
ruleFunctionalities returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionalitiesAccess().getFunctionsProfileManagementParserRuleCall_0_0());
				}
				lv_functions_0_0=ruleProfileManagement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionalitiesRule());
					}
					add(
						$current,
						"functions",
						lv_functions_0_0,
						"org.xtext.example.mydsl.MyDsl.ProfileManagement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionalitiesAccess().getElementsAppAccessParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleAppAccess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionalitiesRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.example.mydsl.MyDsl.AppAccess");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionalitiesAccess().getItemsAlbumManagementParserRuleCall_2_0());
				}
				lv_items_2_0=ruleAlbumManagement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionalitiesRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"org.xtext.example.mydsl.MyDsl.AlbumManagement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionalitiesAccess().getResourcesPhotoActionsParserRuleCall_3_0());
				}
				lv_resources_3_0=rulePhotoActions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionalitiesRule());
					}
					add(
						$current,
						"resources",
						lv_resources_3_0,
						"org.xtext.example.mydsl.MyDsl.PhotoActions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionalitiesAccess().getAditionalsLandingActionsParserRuleCall_4_0());
				}
				lv_aditionals_4_0=ruleLandingActions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionalitiesRule());
					}
					add(
						$current,
						"aditionals",
						lv_aditionals_4_0,
						"org.xtext.example.mydsl.MyDsl.LandingActions");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProfileManagement
entryRuleProfileManagement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProfileManagementRule()); }
	iv_ruleProfileManagement=ruleProfileManagement
	{ $current=$iv_ruleProfileManagement.current; }
	EOF;

// Rule ProfileManagement
ruleProfileManagement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ProfileManagement'
		{
			newLeafNode(otherlv_0, grammarAccess.getProfileManagementAccess().getProfileManagementKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getProfileManagementAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProfileManagementAccess().getItemsProfileManagementFunctionsParserRuleCall_2_0());
				}
				lv_items_2_0=ruleProfileManagementFunctions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProfileManagementRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"org.xtext.example.mydsl.MyDsl.ProfileManagementFunctions");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProfileManagementFunctions
entryRuleProfileManagementFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProfileManagementFunctionsRule()); }
	iv_ruleProfileManagementFunctions=ruleProfileManagementFunctions
	{ $current=$iv_ruleProfileManagementFunctions.current; }
	EOF;

// Rule ProfileManagementFunctions
ruleProfileManagementFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ViewProfilePhoto'
		{
			newLeafNode(otherlv_0, grammarAccess.getProfileManagementFunctionsAccess().getViewProfilePhotoKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getProfileManagementFunctionsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProfileManagementFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='EditProfileInfo'
		{
			newLeafNode(otherlv_2, grammarAccess.getProfileManagementFunctionsAccess().getEditProfileInfoKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getProfileManagementFunctionsAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProfileManagementFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAppAccess
entryRuleAppAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAppAccessRule()); }
	iv_ruleAppAccess=ruleAppAccess
	{ $current=$iv_ruleAppAccess.current; }
	EOF;

// Rule AppAccess
ruleAppAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AppAccess'
		{
			newLeafNode(otherlv_0, grammarAccess.getAppAccessAccess().getAppAccessKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAppAccessAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAppAccessAccess().getItemsAppAccessFunctionsParserRuleCall_2_0());
				}
				lv_items_2_0=ruleAppAccessFunctions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAppAccessRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"org.xtext.example.mydsl.MyDsl.AppAccessFunctions");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAppAccessFunctions
entryRuleAppAccessFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAppAccessFunctionsRule()); }
	iv_ruleAppAccessFunctions=ruleAppAccessFunctions
	{ $current=$iv_ruleAppAccessFunctions.current; }
	EOF;

// Rule AppAccessFunctions
ruleAppAccessFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Login'
		{
			newLeafNode(otherlv_0, grammarAccess.getAppAccessFunctionsAccess().getLoginKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAppAccessFunctionsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAppAccessFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='Register'
		{
			newLeafNode(otherlv_2, grammarAccess.getAppAccessFunctionsAccess().getRegisterKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getAppAccessFunctionsAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAppAccessFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAlbumManagement
entryRuleAlbumManagement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlbumManagementRule()); }
	iv_ruleAlbumManagement=ruleAlbumManagement
	{ $current=$iv_ruleAlbumManagement.current; }
	EOF;

// Rule AlbumManagement
ruleAlbumManagement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AlbumManagement'
		{
			newLeafNode(otherlv_0, grammarAccess.getAlbumManagementAccess().getAlbumManagementKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAlbumManagementAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAlbumManagementAccess().getItemsAlbumManagementFunctionsParserRuleCall_2_0());
				}
				lv_items_2_0=ruleAlbumManagementFunctions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlbumManagementRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"org.xtext.example.mydsl.MyDsl.AlbumManagementFunctions");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAlbumManagementFunctions
entryRuleAlbumManagementFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlbumManagementFunctionsRule()); }
	iv_ruleAlbumManagementFunctions=ruleAlbumManagementFunctions
	{ $current=$iv_ruleAlbumManagementFunctions.current; }
	EOF;

// Rule AlbumManagementFunctions
ruleAlbumManagementFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CreateAlbum'
		{
			newLeafNode(otherlv_0, grammarAccess.getAlbumManagementFunctionsAccess().getCreateAlbumKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAlbumManagementFunctionsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAlbumManagementFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='SelectAlbum'
		{
			newLeafNode(otherlv_2, grammarAccess.getAlbumManagementFunctionsAccess().getSelectAlbumKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getAlbumManagementFunctionsAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAlbumManagementFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePhotoActions
entryRulePhotoActions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhotoActionsRule()); }
	iv_rulePhotoActions=rulePhotoActions
	{ $current=$iv_rulePhotoActions.current; }
	EOF;

// Rule PhotoActions
rulePhotoActions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PhotoActions'
		{
			newLeafNode(otherlv_0, grammarAccess.getPhotoActionsAccess().getPhotoActionsKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPhotoActionsAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhotoActionsAccess().getItemsPhotoActionsFunctionsParserRuleCall_2_0());
				}
				lv_items_2_0=rulePhotoActionsFunctions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhotoActionsRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"org.xtext.example.mydsl.MyDsl.PhotoActionsFunctions");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePhotoActionsFunctions
entryRulePhotoActionsFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhotoActionsFunctionsRule()); }
	iv_rulePhotoActionsFunctions=rulePhotoActionsFunctions
	{ $current=$iv_rulePhotoActionsFunctions.current; }
	EOF;

// Rule PhotoActionsFunctions
rulePhotoActionsFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ViewAllPhotos'
		{
			newLeafNode(otherlv_0, grammarAccess.getPhotoActionsFunctionsAccess().getViewAllPhotosKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPhotoActionsFunctionsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPhotoActionsFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='ViewExtendedPhoto'
		{
			newLeafNode(otherlv_2, grammarAccess.getPhotoActionsFunctionsAccess().getViewExtendedPhotoKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getPhotoActionsFunctionsAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPhotoActionsFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='LoadPhoto'
		{
			newLeafNode(otherlv_4, grammarAccess.getPhotoActionsFunctionsAccess().getLoadPhotoKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getPhotoActionsFunctionsAccess().getNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPhotoActionsFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleLandingActions
entryRuleLandingActions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLandingActionsRule()); }
	iv_ruleLandingActions=ruleLandingActions
	{ $current=$iv_ruleLandingActions.current; }
	EOF;

// Rule LandingActions
ruleLandingActions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LandingActions'
		{
			newLeafNode(otherlv_0, grammarAccess.getLandingActionsAccess().getLandingActionsKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getLandingActionsAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLandingActionsAccess().getItemsLandingFunctionsParserRuleCall_2_0());
				}
				lv_items_2_0=ruleLandingFunctions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLandingActionsRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"org.xtext.example.mydsl.MyDsl.LandingFunctions");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLandingFunctions
entryRuleLandingFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLandingFunctionsRule()); }
	iv_ruleLandingFunctions=ruleLandingFunctions
	{ $current=$iv_ruleLandingFunctions.current; }
	EOF;

// Rule LandingFunctions
ruleLandingFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ViewCarousel'
		{
			newLeafNode(otherlv_0, grammarAccess.getLandingFunctionsAccess().getViewCarouselKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLandingFunctionsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLandingFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='PassPhoto'
		{
			newLeafNode(otherlv_2, grammarAccess.getLandingFunctionsAccess().getPassPhotoKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getLandingFunctionsAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLandingFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDomainConnection
entryRuleDomainConnection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainConnectionRule()); }
	iv_ruleDomainConnection=ruleDomainConnection
	{ $current=$iv_ruleDomainConnection.current; }
	EOF;

// Rule DomainConnection
ruleDomainConnection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DomainRelations'
		{
			newLeafNode(otherlv_0, grammarAccess.getDomainConnectionAccess().getDomainRelationsKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDomainConnectionAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDomainConnectionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainConnectionAccess().getElementsDomainRelationsParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleDomainRelations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainConnectionRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"org.xtext.example.mydsl.MyDsl.DomainRelations");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getDomainConnectionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDomainRelations
entryRuleDomainRelations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainRelationsRule()); }
	iv_ruleDomainRelations=ruleDomainRelations
	{ $current=$iv_ruleDomainRelations.current; }
	EOF;

// Rule DomainRelations
ruleDomainRelations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainRelationsAccess().getElementsUserDomainParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleUserDomain
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainRelationsRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"org.xtext.example.mydsl.MyDsl.UserDomain");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDomainRelationsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDomainRelationsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDomainRelationsAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getDomainRelationsAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainRelationsAccess().getElementsFunctionalitiesParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleFunctionalities
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainRelationsRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"org.xtext.example.mydsl.MyDsl.Functionalities");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getDomainRelationsAccess().getRightCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainRelationsAccess().getElementsAlbumParserRuleCall_6_0());
				}
				lv_elements_6_0=ruleAlbum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainRelationsRule());
					}
					add(
						$current,
						"elements",
						lv_elements_6_0,
						"org.xtext.example.mydsl.MyDsl.Album");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_7_0=RULE_ID
				{
					newLeafNode(lv_name_7_0, grammarAccess.getDomainRelationsAccess().getNameIDTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDomainRelationsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_7_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_8=':'
		{
			newLeafNode(otherlv_8, grammarAccess.getDomainRelationsAccess().getColonKeyword_8());
		}
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getDomainRelationsAccess().getLeftCurlyBracketKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainRelationsAccess().getElementsAlbumManagementFunctionsParserRuleCall_10_0());
				}
				lv_elements_10_0=ruleAlbumManagementFunctions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainRelationsRule());
					}
					add(
						$current,
						"elements",
						lv_elements_10_0,
						"org.xtext.example.mydsl.MyDsl.AlbumManagementFunctions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getDomainRelationsAccess().getRightCurlyBracketKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainRelationsAccess().getElementsPhotoParserRuleCall_12_0());
				}
				lv_elements_12_0=rulePhoto
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainRelationsRule());
					}
					add(
						$current,
						"elements",
						lv_elements_12_0,
						"org.xtext.example.mydsl.MyDsl.Photo");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_13_0=RULE_ID
				{
					newLeafNode(lv_name_13_0, grammarAccess.getDomainRelationsAccess().getNameIDTerminalRuleCall_13_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDomainRelationsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_13_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_14=':'
		{
			newLeafNode(otherlv_14, grammarAccess.getDomainRelationsAccess().getColonKeyword_14());
		}
		otherlv_15='{'
		{
			newLeafNode(otherlv_15, grammarAccess.getDomainRelationsAccess().getLeftCurlyBracketKeyword_15());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainRelationsAccess().getElementsPhotoActionsFunctionsParserRuleCall_16_0());
				}
				lv_elements_16_0=rulePhotoActionsFunctions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainRelationsRule());
					}
					add(
						$current,
						"elements",
						lv_elements_16_0,
						"org.xtext.example.mydsl.MyDsl.PhotoActionsFunctions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getDomainRelationsAccess().getRightCurlyBracketKeyword_17());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainRelationsAccess().getElementsPhotoActionsParserRuleCall_18_0());
				}
				lv_elements_18_0=rulePhotoActions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainRelationsRule());
					}
					add(
						$current,
						"elements",
						lv_elements_18_0,
						"org.xtext.example.mydsl.MyDsl.PhotoActions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_19_0=RULE_ID
				{
					newLeafNode(lv_name_19_0, grammarAccess.getDomainRelationsAccess().getNameIDTerminalRuleCall_19_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDomainRelationsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_19_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_20=':'
		{
			newLeafNode(otherlv_20, grammarAccess.getDomainRelationsAccess().getColonKeyword_20());
		}
		otherlv_21='{'
		{
			newLeafNode(otherlv_21, grammarAccess.getDomainRelationsAccess().getLeftCurlyBracketKeyword_21());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainRelationsAccess().getElementsAlbumManagementParserRuleCall_22_0());
				}
				lv_elements_22_0=ruleAlbumManagement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainRelationsRule());
					}
					add(
						$current,
						"elements",
						lv_elements_22_0,
						"org.xtext.example.mydsl.MyDsl.AlbumManagement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_23='}'
		{
			newLeafNode(otherlv_23, grammarAccess.getDomainRelationsAccess().getRightCurlyBracketKeyword_23());
		}
	)
;

// Entry rule entryRuleArchitecture
entryRuleArchitecture returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArchitectureRule()); }
	iv_ruleArchitecture=ruleArchitecture
	{ $current=$iv_ruleArchitecture.current; }
	EOF;

// Rule Architecture
ruleArchitecture returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Architecture:'
		{
			newLeafNode(otherlv_0, grammarAccess.getArchitectureAccess().getArchitectureKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getArchitectureAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArchitectureAccess().getElementsNTiersParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleNTiers
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArchitectureRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"org.xtext.example.mydsl.MyDsl.NTiers");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getArchitectureAccess().getElementsNTiersConnectionsParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleNTiersConnections
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArchitectureRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"org.xtext.example.mydsl.MyDsl.NTiersConnections");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getArchitectureAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleNTiers
entryRuleNTiers returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNTiersRule()); }
	iv_ruleNTiers=ruleNTiers
	{ $current=$iv_ruleNTiers.current; }
	EOF;

// Rule NTiers
ruleNTiers returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Layers'
		{
			newLeafNode(otherlv_0, grammarAccess.getNTiersAccess().getLayersKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNTiersAccess().getElementsLayerParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleLayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNTiersRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.example.mydsl.MyDsl.Layer");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2='LayersRelations'
		{
			newLeafNode(otherlv_2, grammarAccess.getNTiersAccess().getLayersRelationsKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNTiersAccess().getElementsLayerRelationsParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleLayerRelations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNTiersRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"org.xtext.example.mydsl.MyDsl.LayerRelations");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='ArchitectureComponents'
		{
			newLeafNode(otherlv_4, grammarAccess.getNTiersAccess().getArchitectureComponentsKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNTiersAccess().getElementsArchitectureComponentsParserRuleCall_5_0());
				}
				lv_elements_5_0=ruleArchitectureComponents
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNTiersRule());
					}
					add(
						$current,
						"elements",
						lv_elements_5_0,
						"org.xtext.example.mydsl.MyDsl.ArchitectureComponents");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleLayer
entryRuleLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLayerRule()); }
	iv_ruleLayer=ruleLayer
	{ $current=$iv_ruleLayer.current; }
	EOF;

// Rule Layer
ruleLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerAccess().getElementsPresentationLayerParserRuleCall_0_0());
				}
				lv_elements_0_0=rulePresentationLayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"org.xtext.example.mydsl.MyDsl.PresentationLayer");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerAccess().getElementsBusinessLogicLayerParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleBusinessLogicLayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.example.mydsl.MyDsl.BusinessLogicLayer");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerAccess().getElementsDataPersistenceLayerParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleDataPersistenceLayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"org.xtext.example.mydsl.MyDsl.DataPersistenceLayer");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePresentationLayer
entryRulePresentationLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPresentationLayerRule()); }
	iv_rulePresentationLayer=rulePresentationLayer
	{ $current=$iv_rulePresentationLayer.current; }
	EOF;

// Rule PresentationLayer
rulePresentationLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PresentationLayer'
		{
			newLeafNode(otherlv_0, grammarAccess.getPresentationLayerAccess().getPresentationLayerKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPresentationLayerAccess().getElementsPresentationContentParserRuleCall_1_0());
				}
				lv_elements_1_0=rulePresentationContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPresentationLayerRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.example.mydsl.MyDsl.PresentationContent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPresentationLayerAccess().getElementsSegmentStructureParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleSegmentStructure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPresentationLayerRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"org.xtext.example.mydsl.MyDsl.SegmentStructure");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePresentationContent
entryRulePresentationContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPresentationContentRule()); }
	iv_rulePresentationContent=rulePresentationContent
	{ $current=$iv_rulePresentationContent.current; }
	EOF;

// Rule PresentationContent
rulePresentationContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PresentationSegments'
		{
			newLeafNode(otherlv_0, grammarAccess.getPresentationContentAccess().getPresentationSegmentsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPresentationContentAccess().getElementsPresentationSegmentsParserRuleCall_1_0());
				}
				lv_elements_1_0=rulePresentationSegments
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPresentationContentRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.example.mydsl.MyDsl.PresentationSegments");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePresentationSegments
entryRulePresentationSegments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPresentationSegmentsRule()); }
	iv_rulePresentationSegments=rulePresentationSegments
	{ $current=$iv_rulePresentationSegments.current; }
	EOF;

// Rule PresentationSegments
rulePresentationSegments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PresentationView'
		{
			newLeafNode(otherlv_0, grammarAccess.getPresentationSegmentsAccess().getPresentationViewKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPresentationSegmentsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPresentationSegmentsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='PresentationComponent'
		{
			newLeafNode(otherlv_2, grammarAccess.getPresentationSegmentsAccess().getPresentationComponentKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getPresentationSegmentsAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPresentationSegmentsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='PresentationAction'
		{
			newLeafNode(otherlv_4, grammarAccess.getPresentationSegmentsAccess().getPresentationActionKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getPresentationSegmentsAccess().getNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPresentationSegmentsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBusinessLogicLayer
entryRuleBusinessLogicLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBusinessLogicLayerRule()); }
	iv_ruleBusinessLogicLayer=ruleBusinessLogicLayer
	{ $current=$iv_ruleBusinessLogicLayer.current; }
	EOF;

// Rule BusinessLogicLayer
ruleBusinessLogicLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BusinessLogicLayer'
		{
			newLeafNode(otherlv_0, grammarAccess.getBusinessLogicLayerAccess().getBusinessLogicLayerKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBusinessLogicLayerAccess().getElementsBusinessLogicContentParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleBusinessLogicContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBusinessLogicLayerRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.example.mydsl.MyDsl.BusinessLogicContent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBusinessLogicLayerAccess().getElementsSegmentStructureParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleSegmentStructure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBusinessLogicLayerRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"org.xtext.example.mydsl.MyDsl.SegmentStructure");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBusinessLogicContent
entryRuleBusinessLogicContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBusinessLogicContentRule()); }
	iv_ruleBusinessLogicContent=ruleBusinessLogicContent
	{ $current=$iv_ruleBusinessLogicContent.current; }
	EOF;

// Rule BusinessLogicContent
ruleBusinessLogicContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BusinessLogicSegments'
		{
			newLeafNode(otherlv_0, grammarAccess.getBusinessLogicContentAccess().getBusinessLogicSegmentsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBusinessLogicContentAccess().getElementsBusinessLogicSegmentsParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleBusinessLogicSegments
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBusinessLogicContentRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.example.mydsl.MyDsl.BusinessLogicSegments");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBusinessLogicSegments
entryRuleBusinessLogicSegments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBusinessLogicSegmentsRule()); }
	iv_ruleBusinessLogicSegments=ruleBusinessLogicSegments
	{ $current=$iv_ruleBusinessLogicSegments.current; }
	EOF;

// Rule BusinessLogicSegments
ruleBusinessLogicSegments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ControllerSegment'
		{
			newLeafNode(otherlv_0, grammarAccess.getBusinessLogicSegmentsAccess().getControllerSegmentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBusinessLogicSegmentsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBusinessLogicSegmentsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='ModelSegment'
		{
			newLeafNode(otherlv_2, grammarAccess.getBusinessLogicSegmentsAccess().getModelSegmentKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getBusinessLogicSegmentsAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBusinessLogicSegmentsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='RepositorySegment'
		{
			newLeafNode(otherlv_4, grammarAccess.getBusinessLogicSegmentsAccess().getRepositorySegmentKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getBusinessLogicSegmentsAccess().getNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBusinessLogicSegmentsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_6='SecuritySegment'
		{
			newLeafNode(otherlv_6, grammarAccess.getBusinessLogicSegmentsAccess().getSecuritySegmentKeyword_6());
		}
		(
			(
				lv_name_7_0=RULE_ID
				{
					newLeafNode(lv_name_7_0, grammarAccess.getBusinessLogicSegmentsAccess().getNameIDTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBusinessLogicSegmentsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_7_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDataPersistenceLayer
entryRuleDataPersistenceLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataPersistenceLayerRule()); }
	iv_ruleDataPersistenceLayer=ruleDataPersistenceLayer
	{ $current=$iv_ruleDataPersistenceLayer.current; }
	EOF;

// Rule DataPersistenceLayer
ruleDataPersistenceLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DataPersistenceLayer'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataPersistenceLayerAccess().getDataPersistenceLayerKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataPersistenceLayerAccess().getElementsDataPersistenceContentParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleDataPersistenceContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataPersistenceLayerRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.example.mydsl.MyDsl.DataPersistenceContent");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDataPersistenceContent
entryRuleDataPersistenceContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataPersistenceContentRule()); }
	iv_ruleDataPersistenceContent=ruleDataPersistenceContent
	{ $current=$iv_ruleDataPersistenceContent.current; }
	EOF;

// Rule DataPersistenceContent
ruleDataPersistenceContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DataPersistenceSegments'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataPersistenceContentAccess().getDataPersistenceSegmentsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataPersistenceContentAccess().getElementsDataPersistenceSegmentsParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleDataPersistenceSegments
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataPersistenceContentRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.example.mydsl.MyDsl.DataPersistenceSegments");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDataPersistenceSegments
entryRuleDataPersistenceSegments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataPersistenceSegmentsRule()); }
	iv_ruleDataPersistenceSegments=ruleDataPersistenceSegments
	{ $current=$iv_ruleDataPersistenceSegments.current; }
	EOF;

// Rule DataPersistenceSegments
ruleDataPersistenceSegments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PostgreSLQSegment'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataPersistenceSegmentsAccess().getPostgreSLQSegmentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataPersistenceSegmentsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataPersistenceSegmentsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='AmazonS3Storage'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataPersistenceSegmentsAccess().getAmazonS3StorageKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getDataPersistenceSegmentsAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataPersistenceSegmentsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSegmentStructure
entryRuleSegmentStructure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSegmentStructureRule()); }
	iv_ruleSegmentStructure=ruleSegmentStructure
	{ $current=$iv_ruleSegmentStructure.current; }
	EOF;

// Rule SegmentStructure
ruleSegmentStructure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SegmentStructure'
		{
			newLeafNode(otherlv_0, grammarAccess.getSegmentStructureAccess().getSegmentStructureKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSegmentStructureAccess().getElementsSegmentStructureContentParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleSegmentStructureContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSegmentStructureRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.example.mydsl.MyDsl.SegmentStructureContent");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSegmentStructureContent
entryRuleSegmentStructureContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSegmentStructureContentRule()); }
	iv_ruleSegmentStructureContent=ruleSegmentStructureContent
	{ $current=$iv_ruleSegmentStructureContent.current; }
	EOF;

// Rule SegmentStructureContent
ruleSegmentStructureContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Directories'
		{
			newLeafNode(otherlv_0, grammarAccess.getSegmentStructureContentAccess().getDirectoriesKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSegmentStructureContentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSegmentStructureContentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSegmentStructureContentAccess().getElementsDirectoryContentParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleDirectoryContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSegmentStructureContentRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"org.xtext.example.mydsl.MyDsl.DirectoryContent");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleDirectoryContent
entryRuleDirectoryContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectoryContentRule()); }
	iv_ruleDirectoryContent=ruleDirectoryContent
	{ $current=$iv_ruleDirectoryContent.current; }
	EOF;

// Rule DirectoryContent
ruleDirectoryContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Directory'
			{
				newLeafNode(otherlv_0, grammarAccess.getDirectoryContentAccess().getDirectoryKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getDirectoryContentAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDirectoryContentRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDirectoryContentAccess().getElementsDirectoriesParserRuleCall_0_2_0());
					}
					lv_elements_2_0=ruleDirectories
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDirectoryContentRule());
						}
						add(
							$current,
							"elements",
							lv_elements_2_0,
							"org.xtext.example.mydsl.MyDsl.Directories");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDirectoryContentAccess().getElementsSingleFileParserRuleCall_1_0());
				}
				lv_elements_3_0=ruleSingleFile
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDirectoryContentRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"org.xtext.example.mydsl.MyDsl.SingleFile");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleDirectories
entryRuleDirectories returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectoriesRule()); }
	iv_ruleDirectories=ruleDirectories
	{ $current=$iv_ruleDirectories.current; }
	EOF;

// Rule Directories
ruleDirectories returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDirectoriesAccess().getElementsMultipleFileParserRuleCall_0());
			}
			lv_elements_0_0=ruleMultipleFile
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDirectoriesRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"org.xtext.example.mydsl.MyDsl.MultipleFile");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleSingleFile
entryRuleSingleFile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleFileRule()); }
	iv_ruleSingleFile=ruleSingleFile
	{ $current=$iv_ruleSingleFile.current; }
	EOF;

// Rule SingleFile
ruleSingleFile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SingleFile'
		{
			newLeafNode(otherlv_0, grammarAccess.getSingleFileAccess().getSingleFileKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSingleFileAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleFileRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleMultipleFile
entryRuleMultipleFile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultipleFileRule()); }
	iv_ruleMultipleFile=ruleMultipleFile
	{ $current=$iv_ruleMultipleFile.current; }
	EOF;

// Rule MultipleFile
ruleMultipleFile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CommonFile'
		{
			newLeafNode(otherlv_0, grammarAccess.getMultipleFileAccess().getCommonFileKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMultipleFileAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultipleFileRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleLayerRelations
entryRuleLayerRelations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLayerRelationsRule()); }
	iv_ruleLayerRelations=ruleLayerRelations
	{ $current=$iv_ruleLayerRelations.current; }
	EOF;

// Rule LayerRelations
ruleLayerRelations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerRelationsAccess().getLayerelationsRelationTypeParserRuleCall_0_0());
				}
				lv_layerelations_0_0=ruleRelationType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerRelationsRule());
					}
					add(
						$current,
						"layerelations",
						lv_layerelations_0_0,
						"org.xtext.example.mydsl.MyDsl.RelationType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLayerRelationsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLayerRelationsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerRelationsAccess().getLayeroriginLayerSourceParserRuleCall_2_0());
				}
				lv_layerorigin_2_0=ruleLayerSource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerRelationsRule());
					}
					add(
						$current,
						"layerorigin",
						lv_layerorigin_2_0,
						"org.xtext.example.mydsl.MyDsl.LayerSource");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerRelationsAccess().getLayertargetLayerTargetParserRuleCall_3_0());
				}
				lv_layertarget_3_0=ruleLayerTarget
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerRelationsRule());
					}
					add(
						$current,
						"layertarget",
						lv_layertarget_3_0,
						"org.xtext.example.mydsl.MyDsl.LayerTarget");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)+
;

// Entry rule entryRuleRelationType
entryRuleRelationType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRelationTypeRule()); }
	iv_ruleRelationType=ruleRelationType
	{ $current=$iv_ruleRelationType.current.getText(); }
	EOF;

// Rule RelationType
ruleRelationType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='AllowedToUse'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelationTypeAccess().getAllowedToUseKeyword_0());
		}
		    |
		kw='AllowToUseBelow'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelationTypeAccess().getAllowToUseBelowKeyword_1());
		}
	)
;

// Entry rule entryRuleLayerSource
entryRuleLayerSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLayerSourceRule()); }
	iv_ruleLayerSource=ruleLayerSource
	{ $current=$iv_ruleLayerSource.current; }
	EOF;

// Rule LayerSource
ruleLayerSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='source'
		{
			newLeafNode(otherlv_0, grammarAccess.getLayerSourceAccess().getSourceKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerSourceAccess().getLayerelationsLayerRelationNameParserRuleCall_1_0());
				}
				lv_layerelations_1_0=ruleLayerRelationName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerSourceRule());
					}
					add(
						$current,
						"layerelations",
						lv_layerelations_1_0,
						"org.xtext.example.mydsl.MyDsl.LayerRelationName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLayerTarget
entryRuleLayerTarget returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLayerTargetRule()); }
	iv_ruleLayerTarget=ruleLayerTarget
	{ $current=$iv_ruleLayerTarget.current; }
	EOF;

// Rule LayerTarget
ruleLayerTarget returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='target'
		{
			newLeafNode(otherlv_0, grammarAccess.getLayerTargetAccess().getTargetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerTargetAccess().getLayerelationsLayerRelationNameParserRuleCall_1_0());
				}
				lv_layerelations_1_0=ruleLayerRelationName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerTargetRule());
					}
					add(
						$current,
						"layerelations",
						lv_layerelations_1_0,
						"org.xtext.example.mydsl.MyDsl.LayerRelationName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLayerRelationName
entryRuleLayerRelationName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLayerRelationNameRule()); }
	iv_ruleLayerRelationName=ruleLayerRelationName
	{ $current=$iv_ruleLayerRelationName.current.getText(); }
	EOF;

// Rule LayerRelationName
ruleLayerRelationName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='PresentationLayer'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLayerRelationNameAccess().getPresentationLayerKeyword_0());
		}
		    |
		kw='BusinessLogicLayer'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLayerRelationNameAccess().getBusinessLogicLayerKeyword_1());
		}
		    |
		kw='PersistenceDataLayer'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLayerRelationNameAccess().getPersistenceDataLayerKeyword_2());
		}
	)
;

// Entry rule entryRuleArchitectureComponents
entryRuleArchitectureComponents returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArchitectureComponentsRule()); }
	iv_ruleArchitectureComponents=ruleArchitectureComponents
	{ $current=$iv_ruleArchitectureComponents.current; }
	EOF;

// Rule ArchitectureComponents
ruleArchitectureComponents returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SystemComponents'
		{
			newLeafNode(otherlv_0, grammarAccess.getArchitectureComponentsAccess().getSystemComponentsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArchitectureComponentsAccess().getArchcomponentFrontEndParserRuleCall_1_0());
				}
				lv_archcomponent_1_0=ruleFrontEnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArchitectureComponentsRule());
					}
					add(
						$current,
						"archcomponent",
						lv_archcomponent_1_0,
						"org.xtext.example.mydsl.MyDsl.FrontEnd");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getArchitectureComponentsAccess().getArchcomponentBackEndParserRuleCall_2_0());
				}
				lv_archcomponent_2_0=ruleBackEnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArchitectureComponentsRule());
					}
					add(
						$current,
						"archcomponent",
						lv_archcomponent_2_0,
						"org.xtext.example.mydsl.MyDsl.BackEnd");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getArchitectureComponentsAccess().getArchcomponentPersistenceDataComponentParserRuleCall_3_0());
				}
				lv_archcomponent_3_0=rulePersistenceDataComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArchitectureComponentsRule());
					}
					add(
						$current,
						"archcomponent",
						lv_archcomponent_3_0,
						"org.xtext.example.mydsl.MyDsl.PersistenceDataComponent");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFrontEnd
entryRuleFrontEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFrontEndRule()); }
	iv_ruleFrontEnd=ruleFrontEnd
	{ $current=$iv_ruleFrontEnd.current; }
	EOF;

// Rule FrontEnd
ruleFrontEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FrontEndComponent'
		{
			newLeafNode(otherlv_0, grammarAccess.getFrontEndAccess().getFrontEndComponentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFrontEndAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFrontEndRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBackEnd
entryRuleBackEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBackEndRule()); }
	iv_ruleBackEnd=ruleBackEnd
	{ $current=$iv_ruleBackEnd.current; }
	EOF;

// Rule BackEnd
ruleBackEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BackEndComponent'
		{
			newLeafNode(otherlv_0, grammarAccess.getBackEndAccess().getBackEndComponentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBackEndAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBackEndRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePersistenceDataComponent
entryRulePersistenceDataComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPersistenceDataComponentRule()); }
	iv_rulePersistenceDataComponent=rulePersistenceDataComponent
	{ $current=$iv_rulePersistenceDataComponent.current; }
	EOF;

// Rule PersistenceDataComponent
rulePersistenceDataComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PersistenceDataComponent'
		{
			newLeafNode(otherlv_0, grammarAccess.getPersistenceDataComponentAccess().getPersistenceDataComponentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPersistenceDataComponentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPersistenceDataComponentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleNTiersConnections
entryRuleNTiersConnections returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNTiersConnectionsRule()); }
	iv_ruleNTiersConnections=ruleNTiersConnections
	{ $current=$iv_ruleNTiersConnections.current; }
	EOF;

// Rule NTiersConnections
ruleNTiersConnections returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Connectors'
		{
			newLeafNode(otherlv_0, grammarAccess.getNTiersConnectionsAccess().getConnectorsKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getNTiersConnectionsAccess().getNtierconnectionConnectionTypeParserRuleCall_1_0_0());
					}
					lv_ntierconnection_1_0=ruleConnectionType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNTiersConnectionsRule());
						}
						add(
							$current,
							"ntierconnection",
							lv_ntierconnection_1_0,
							"org.xtext.example.mydsl.MyDsl.ConnectionType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getNTiersConnectionsAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNTiersConnectionsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNTiersConnectionsAccess().getNtieroriginNTierSourceParserRuleCall_1_2_0());
					}
					lv_ntierorigin_3_0=ruleNTierSource
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNTiersConnectionsRule());
						}
						add(
							$current,
							"ntierorigin",
							lv_ntierorigin_3_0,
							"org.xtext.example.mydsl.MyDsl.NTierSource");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNTiersConnectionsAccess().getNtiertargetNTierTargetParserRuleCall_1_3_0());
					}
					lv_ntiertarget_4_0=ruleNTierTarget
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNTiersConnectionsRule());
						}
						add(
							$current,
							"ntiertarget",
							lv_ntiertarget_4_0,
							"org.xtext.example.mydsl.MyDsl.NTierTarget");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
	)
;

// Entry rule entryRuleConnectionType
entryRuleConnectionType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConnectionTypeRule()); }
	iv_ruleConnectionType=ruleConnectionType
	{ $current=$iv_ruleConnectionType.current.getText(); }
	EOF;

// Rule ConnectionType
ruleConnectionType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='REST'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConnectionTypeAccess().getRESTKeyword_0());
		}
		    |
		kw='PostgreSQLConnection'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConnectionTypeAccess().getPostgreSQLConnectionKeyword_1());
		}
		    |
		kw='AmazonS3API'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConnectionTypeAccess().getAmazonS3APIKeyword_2());
		}
	)
;

// Entry rule entryRuleNTierSource
entryRuleNTierSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNTierSourceRule()); }
	iv_ruleNTierSource=ruleNTierSource
	{ $current=$iv_ruleNTierSource.current; }
	EOF;

// Rule NTierSource
ruleNTierSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='source'
		{
			newLeafNode(otherlv_0, grammarAccess.getNTierSourceAccess().getSourceKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNTierSourceAccess().getNtierconnectionNTiersRelationsParserRuleCall_1_0());
				}
				lv_ntierconnection_1_0=ruleNTiersRelations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNTierSourceRule());
					}
					add(
						$current,
						"ntierconnection",
						lv_ntierconnection_1_0,
						"org.xtext.example.mydsl.MyDsl.NTiersRelations");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNTierTarget
entryRuleNTierTarget returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNTierTargetRule()); }
	iv_ruleNTierTarget=ruleNTierTarget
	{ $current=$iv_ruleNTierTarget.current; }
	EOF;

// Rule NTierTarget
ruleNTierTarget returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='target'
		{
			newLeafNode(otherlv_0, grammarAccess.getNTierTargetAccess().getTargetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNTierTargetAccess().getNtierconnectionNTiersRelationsParserRuleCall_1_0());
				}
				lv_ntierconnection_1_0=ruleNTiersRelations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNTierTargetRule());
					}
					add(
						$current,
						"ntierconnection",
						lv_ntierconnection_1_0,
						"org.xtext.example.mydsl.MyDsl.NTiersRelations");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNTiersRelations
entryRuleNTiersRelations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNTiersRelationsRule()); }
	iv_ruleNTiersRelations=ruleNTiersRelations
	{ $current=$iv_ruleNTiersRelations.current; }
	EOF;

// Rule NTiersRelations
ruleNTiersRelations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='FrontEndComponent'
			{
				newLeafNode(otherlv_0, grammarAccess.getNTiersRelationsAccess().getFrontEndComponentKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getNTiersRelationsAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNTiersRelationsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_2='BackEndComponent'
			{
				newLeafNode(otherlv_2, grammarAccess.getNTiersRelationsAccess().getBackEndComponentKeyword_1_0());
			}
			(
				(
					lv_name_3_0=RULE_ID
					{
						newLeafNode(lv_name_3_0, grammarAccess.getNTiersRelationsAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNTiersRelationsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_4='PersistenceDataComponent'
			{
				newLeafNode(otherlv_4, grammarAccess.getNTiersRelationsAccess().getPersistenceDataComponentKeyword_2_0());
			}
			(
				(
					lv_name_5_0=RULE_ID
					{
						newLeafNode(lv_name_5_0, grammarAccess.getNTiersRelationsAccess().getNameIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNTiersRelationsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_6='AmazonService'
			{
				newLeafNode(otherlv_6, grammarAccess.getNTiersRelationsAccess().getAmazonServiceKeyword_3_0());
			}
			(
				(
					lv_name_7_0=RULE_ID
					{
						newLeafNode(lv_name_7_0, grammarAccess.getNTiersRelationsAccess().getNameIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNTiersRelationsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_7_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleTechnology
entryRuleTechnology returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTechnologyRule()); }
	iv_ruleTechnology=ruleTechnology
	{ $current=$iv_ruleTechnology.current; }
	EOF;

// Rule Technology
ruleTechnology returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Technology'
		{
			newLeafNode(otherlv_0, grammarAccess.getTechnologyAccess().getTechnologyKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTechnologyAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTechnologyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getTechnologyAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getTechnologyAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTechnologyAccess().getElementsTechnologiesParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleTechnologies
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTechnologyRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"org.xtext.example.mydsl.MyDsl.Technologies");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getTechnologyAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleTechnologies
entryRuleTechnologies returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTechnologiesRule()); }
	iv_ruleTechnologies=ruleTechnologies
	{ $current=$iv_ruleTechnologies.current; }
	EOF;

// Rule Technologies
ruleTechnologies returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTechnologiesAccess().getFactorsSpringParserRuleCall_0_0());
				}
				lv_factors_0_0=ruleSpring
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTechnologiesRule());
					}
					add(
						$current,
						"factors",
						lv_factors_0_0,
						"org.xtext.example.mydsl.MyDsl.Spring");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTechnologiesAccess().getFactorsReactParserRuleCall_1_0());
				}
				lv_factors_1_0=ruleReact
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTechnologiesRule());
					}
					add(
						$current,
						"factors",
						lv_factors_1_0,
						"org.xtext.example.mydsl.MyDsl.React");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTechnologiesAccess().getFactorsPostgreSQLParserRuleCall_2_0());
				}
				lv_factors_2_0=rulePostgreSQL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTechnologiesRule());
					}
					add(
						$current,
						"factors",
						lv_factors_2_0,
						"org.xtext.example.mydsl.MyDsl.PostgreSQL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTechnologiesAccess().getFactorsAmazonWebServicesParserRuleCall_3_0());
				}
				lv_factors_3_0=ruleAmazonWebServices
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTechnologiesRule());
					}
					add(
						$current,
						"factors",
						lv_factors_3_0,
						"org.xtext.example.mydsl.MyDsl.AmazonWebServices");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReact
entryRuleReact returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactRule()); }
	iv_ruleReact=ruleReact
	{ $current=$iv_ruleReact.current; }
	EOF;

// Rule React
ruleReact returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='React'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactAccess().getReactKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReactAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getReactAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactAccess().getReactsReactModulesParserRuleCall_4_0());
				}
				lv_reacts_4_0=ruleReactModules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactRule());
					}
					add(
						$current,
						"reacts",
						lv_reacts_4_0,
						"org.xtext.example.mydsl.MyDsl.ReactModules");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getReactAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleReactModules
entryRuleReactModules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactModulesRule()); }
	iv_ruleReactModules=ruleReactModules
	{ $current=$iv_ruleReactModules.current; }
	EOF;

// Rule ReactModules
ruleReactModules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ReactModules'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactModulesAccess().getReactModulesKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getReactModulesAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactModulesAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactModulesAccess().getReactmodulesReactSubModulesParserRuleCall_3_0());
				}
				lv_reactmodules_3_0=ruleReactSubModules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactModulesRule());
					}
					add(
						$current,
						"reactmodules",
						lv_reactmodules_3_0,
						"org.xtext.example.mydsl.MyDsl.ReactSubModules");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getReactModulesAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleReactSubModules
entryRuleReactSubModules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactSubModulesRule()); }
	iv_ruleReactSubModules=ruleReactSubModules
	{ $current=$iv_ruleReactSubModules.current; }
	EOF;

// Rule ReactSubModules
ruleReactSubModules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getReactSubModulesAccess().getReactmodulesReactConfigurationParserRuleCall_0_0());
				}
				lv_reactmodules_0_0=ruleReactConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactSubModulesRule());
					}
					add(
						$current,
						"reactmodules",
						lv_reactmodules_0_0,
						"org.xtext.example.mydsl.MyDsl.ReactConfiguration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactSubModulesAccess().getReactmodulesReactComponentsParserRuleCall_1_0());
				}
				lv_reactmodules_1_0=ruleReactComponents
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactSubModulesRule());
					}
					add(
						$current,
						"reactmodules",
						lv_reactmodules_1_0,
						"org.xtext.example.mydsl.MyDsl.ReactComponents");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactSubModulesAccess().getReactmodulesReactActionsParserRuleCall_2_0());
				}
				lv_reactmodules_2_0=ruleReactActions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactSubModulesRule());
					}
					add(
						$current,
						"reactmodules",
						lv_reactmodules_2_0,
						"org.xtext.example.mydsl.MyDsl.ReactActions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactSubModulesAccess().getReactmodulesReactLibrariesParserRuleCall_3_0());
				}
				lv_reactmodules_3_0=ruleReactLibraries
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactSubModulesRule());
					}
					add(
						$current,
						"reactmodules",
						lv_reactmodules_3_0,
						"org.xtext.example.mydsl.MyDsl.ReactLibraries");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactSubModulesAccess().getReactmodulesReactInfoParserRuleCall_4_0());
				}
				lv_reactmodules_4_0=ruleReactInfo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactSubModulesRule());
					}
					add(
						$current,
						"reactmodules",
						lv_reactmodules_4_0,
						"org.xtext.example.mydsl.MyDsl.ReactInfo");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReactConfiguration
entryRuleReactConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactConfigurationRule()); }
	iv_ruleReactConfiguration=ruleReactConfiguration
	{ $current=$iv_ruleReactConfiguration.current; }
	EOF;

// Rule ReactConfiguration
ruleReactConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ReactConfiguration'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactConfigurationAccess().getReactConfigurationKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getReactConfigurationAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactConfigurationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactConfigurationAccess().getDependenciesReactDependenciesParserRuleCall_3_0());
				}
				lv_dependencies_3_0=ruleReactDependencies
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactConfigurationRule());
					}
					add(
						$current,
						"dependencies",
						lv_dependencies_3_0,
						"org.xtext.example.mydsl.MyDsl.ReactDependencies");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactConfigurationAccess().getConfigurationsReactConfigurationsParserRuleCall_4_0());
				}
				lv_configurations_4_0=ruleReactConfigurations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactConfigurationRule());
					}
					add(
						$current,
						"configurations",
						lv_configurations_4_0,
						"org.xtext.example.mydsl.MyDsl.ReactConfigurations");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getReactConfigurationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleReactDependencies
entryRuleReactDependencies returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactDependenciesRule()); }
	iv_ruleReactDependencies=ruleReactDependencies
	{ $current=$iv_ruleReactDependencies.current; }
	EOF;

// Rule ReactDependencies
ruleReactDependencies returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DependenciesStruct'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactDependenciesAccess().getDependenciesStructKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactDependenciesAccess().getDependenciesReactDependenciesRulesParserRuleCall_1_0());
				}
				lv_dependencies_1_0=ruleReactDependenciesRules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactDependenciesRule());
					}
					add(
						$current,
						"dependencies",
						lv_dependencies_1_0,
						"org.xtext.example.mydsl.MyDsl.ReactDependenciesRules");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleReactDependenciesRules
entryRuleReactDependenciesRules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactDependenciesRulesRule()); }
	iv_ruleReactDependenciesRules=ruleReactDependenciesRules
	{ $current=$iv_ruleReactDependenciesRules.current; }
	EOF;

// Rule ReactDependenciesRules
ruleReactDependenciesRules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DependencyType'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactDependenciesRulesAccess().getDependencyTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReactDependenciesRulesAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactDependenciesRulesRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactDependenciesRulesAccess().getDependenciesReactDependenciesSubRulesParserRuleCall_2_0());
				}
				lv_dependencies_2_0=ruleReactDependenciesSubRules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactDependenciesRulesRule());
					}
					add(
						$current,
						"dependencies",
						lv_dependencies_2_0,
						"org.xtext.example.mydsl.MyDsl.ReactDependenciesSubRules");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleReactDependenciesSubRules
entryRuleReactDependenciesSubRules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactDependenciesSubRulesRule()); }
	iv_ruleReactDependenciesSubRules=ruleReactDependenciesSubRules
	{ $current=$iv_ruleReactDependenciesSubRules.current; }
	EOF;

// Rule ReactDependenciesSubRules
ruleReactDependenciesSubRules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getReactDependenciesSubRulesAccess().getDependenciesSingleDependenciesParserRuleCall_0());
			}
			lv_dependencies_0_0=ruleSingleDependencies
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getReactDependenciesSubRulesRule());
				}
				add(
					$current,
					"dependencies",
					lv_dependencies_0_0,
					"org.xtext.example.mydsl.MyDsl.SingleDependencies");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSingleDependencies
entryRuleSingleDependencies returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleDependenciesRule()); }
	iv_ruleSingleDependencies=ruleSingleDependencies
	{ $current=$iv_ruleSingleDependencies.current; }
	EOF;

// Rule SingleDependencies
ruleSingleDependencies returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleDependenciesAccess().getDependenciesPackageNameParserRuleCall_0_0());
				}
				lv_dependencies_0_0=rulePackageName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleDependenciesRule());
					}
					add(
						$current,
						"dependencies",
						lv_dependencies_0_0,
						"org.xtext.example.mydsl.MyDsl.PackageName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleDependenciesAccess().getDependenciesPackageVersionParserRuleCall_1_0());
				}
				lv_dependencies_1_0=rulePackageVersion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleDependenciesRule());
					}
					add(
						$current,
						"dependencies",
						lv_dependencies_1_0,
						"org.xtext.example.mydsl.MyDsl.PackageVersion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePackageName
entryRulePackageName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageNameRule()); }
	iv_rulePackageName=rulePackageName
	{ $current=$iv_rulePackageName.current; }
	EOF;

// Rule PackageName
rulePackageName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PackageName'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageNameAccess().getPackageNameKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPackageNameAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPackageNameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePackageVersion
entryRulePackageVersion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageVersionRule()); }
	iv_rulePackageVersion=rulePackageVersion
	{ $current=$iv_rulePackageVersion.current; }
	EOF;

// Rule PackageVersion
rulePackageVersion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PackageVersion'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageVersionAccess().getPackageVersionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPackageVersionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPackageVersionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleReactConfigurations
entryRuleReactConfigurations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactConfigurationsRule()); }
	iv_ruleReactConfigurations=ruleReactConfigurations
	{ $current=$iv_ruleReactConfigurations.current; }
	EOF;

// Rule ReactConfigurations
ruleReactConfigurations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ReactDOMConfigurations'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactConfigurationsAccess().getReactDOMConfigurationsKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReactConfigurationsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactConfigurationsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactConfigurationsAccess().getConfigurationsDOMConfigurationsParserRuleCall_2_0());
				}
				lv_configurations_2_0=ruleDOMConfigurations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactConfigurationsRule());
					}
					add(
						$current,
						"configurations",
						lv_configurations_2_0,
						"org.xtext.example.mydsl.MyDsl.DOMConfigurations");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleDOMConfigurations
entryRuleDOMConfigurations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDOMConfigurationsRule()); }
	iv_ruleDOMConfigurations=ruleDOMConfigurations
	{ $current=$iv_ruleDOMConfigurations.current; }
	EOF;

// Rule DOMConfigurations
ruleDOMConfigurations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDOMConfigurationsAccess().getElementsDOMTypeConfParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleDOMTypeConf
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDOMConfigurationsRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"org.xtext.example.mydsl.MyDsl.DOMTypeConf");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDOMConfigurationsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDOMConfigurationsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDOMTypeConf
entryRuleDOMTypeConf returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDOMTypeConfRule()); }
	iv_ruleDOMTypeConf=ruleDOMTypeConf
	{ $current=$iv_ruleDOMTypeConf.current.getText(); }
	EOF;

// Rule DOMTypeConf
ruleDOMTypeConf returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='RoutingConf'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDOMTypeConfAccess().getRoutingConfKeyword_0());
		}
		    |
		kw='ServiceWorker'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDOMTypeConfAccess().getServiceWorkerKeyword_1());
		}
		    |
		kw='HTMLStructure'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDOMTypeConfAccess().getHTMLStructureKeyword_2());
		}
		    |
		kw='Manifest'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDOMTypeConfAccess().getManifestKeyword_3());
		}
		    |
		kw='RepositoriesConf'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDOMTypeConfAccess().getRepositoriesConfKeyword_4());
		}
	)
;

// Entry rule entryRuleReactComponents
entryRuleReactComponents returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactComponentsRule()); }
	iv_ruleReactComponents=ruleReactComponents
	{ $current=$iv_ruleReactComponents.current; }
	EOF;

// Rule ReactComponents
ruleReactComponents returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ReactComponents'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactComponentsAccess().getReactComponentsKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getReactComponentsAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactComponentsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactComponentsAccess().getComponentslogicComponentsLogicParserRuleCall_3_0());
				}
				lv_componentslogic_3_0=ruleComponentsLogic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactComponentsRule());
					}
					add(
						$current,
						"componentslogic",
						lv_componentslogic_3_0,
						"org.xtext.example.mydsl.MyDsl.ComponentsLogic");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactComponentsAccess().getComponentsuiComponentsUIParserRuleCall_4_0());
				}
				lv_componentsui_4_0=ruleComponentsUI
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactComponentsRule());
					}
					add(
						$current,
						"componentsui",
						lv_componentsui_4_0,
						"org.xtext.example.mydsl.MyDsl.ComponentsUI");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getReactComponentsAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleComponentsLogic
entryRuleComponentsLogic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentsLogicRule()); }
	iv_ruleComponentsLogic=ruleComponentsLogic
	{ $current=$iv_ruleComponentsLogic.current; }
	EOF;

// Rule ComponentsLogic
ruleComponentsLogic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LogicComponents'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentsLogicAccess().getLogicComponentsKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getComponentsLogicAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentsLogicRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentsLogicAccess().getLogiccomponentsLogicContentParserRuleCall_2_0());
				}
				lv_logiccomponents_2_0=ruleLogicContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentsLogicRule());
					}
					add(
						$current,
						"logiccomponents",
						lv_logiccomponents_2_0,
						"org.xtext.example.mydsl.MyDsl.LogicContent");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLogicContent
entryRuleLogicContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicContentRule()); }
	iv_ruleLogicContent=ruleLogicContent
	{ $current=$iv_ruleLogicContent.current; }
	EOF;

// Rule LogicContent
ruleLogicContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RoutingComponents'
		{
			newLeafNode(otherlv_0, grammarAccess.getLogicContentAccess().getRoutingComponentsKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLogicContentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLogicContentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicContentAccess().getLogiccomponentsLogicStructureParserRuleCall_2_0());
				}
				lv_logiccomponents_2_0=ruleLogicStructure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicContentRule());
					}
					add(
						$current,
						"logiccomponents",
						lv_logiccomponents_2_0,
						"org.xtext.example.mydsl.MyDsl.LogicStructure");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLogicStructure
entryRuleLogicStructure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicStructureRule()); }
	iv_ruleLogicStructure=ruleLogicStructure
	{ $current=$iv_ruleLogicStructure.current; }
	EOF;

// Rule LogicStructure
ruleLogicStructure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AppComponent'
		{
			newLeafNode(otherlv_0, grammarAccess.getLogicStructureAccess().getAppComponentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLogicStructureAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLogicStructureRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicStructureAccess().getLogiccomponentsComponentClassParserRuleCall_2_0());
				}
				lv_logiccomponents_2_0=ruleComponentClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicStructureRule());
					}
					add(
						$current,
						"logiccomponents",
						lv_logiccomponents_2_0,
						"org.xtext.example.mydsl.MyDsl.ComponentClass");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='IndexComponent'
		{
			newLeafNode(otherlv_3, grammarAccess.getLogicStructureAccess().getIndexComponentKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getLogicStructureAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLogicStructureRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleComponentsUI
entryRuleComponentsUI returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentsUIRule()); }
	iv_ruleComponentsUI=ruleComponentsUI
	{ $current=$iv_ruleComponentsUI.current; }
	EOF;

// Rule ComponentsUI
ruleComponentsUI returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='UIComponents'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentsUIAccess().getUIComponentsKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getComponentsUIAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentsUIRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentsUIAccess().getUicomponentsUIContentParserRuleCall_2_0());
				}
				lv_uicomponents_2_0=ruleUIContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentsUIRule());
					}
					add(
						$current,
						"uicomponents",
						lv_uicomponents_2_0,
						"org.xtext.example.mydsl.MyDsl.UIContent");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUIContent
entryRuleUIContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUIContentRule()); }
	iv_ruleUIContent=ruleUIContent
	{ $current=$iv_ruleUIContent.current; }
	EOF;

// Rule UIContent
ruleUIContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='ViewComponent'
			{
				newLeafNode(otherlv_0, grammarAccess.getUIContentAccess().getViewComponentKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getUIContentAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUIContentRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUIContentAccess().getUicontentComponentClassParserRuleCall_0_2_0());
					}
					lv_uicontent_2_0=ruleComponentClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUIContentRule());
						}
						add(
							$current,
							"uicontent",
							lv_uicontent_2_0,
							"org.xtext.example.mydsl.MyDsl.ComponentClass");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		(
			otherlv_3='Subcomponents'
			{
				newLeafNode(otherlv_3, grammarAccess.getUIContentAccess().getSubcomponentsKeyword_1_0());
			}
			(
				(
					lv_name_4_0=RULE_ID
					{
						newLeafNode(lv_name_4_0, grammarAccess.getUIContentAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUIContentRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUIContentAccess().getUicontentComponentClassParserRuleCall_1_2_0());
					}
					lv_uicontent_5_0=ruleComponentClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUIContentRule());
						}
						add(
							$current,
							"uicontent",
							lv_uicontent_5_0,
							"org.xtext.example.mydsl.MyDsl.ComponentClass");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
	)
;

// Entry rule entryRuleComponentClass
entryRuleComponentClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentClassRule()); }
	iv_ruleComponentClass=ruleComponentClass
	{ $current=$iv_ruleComponentClass.current; }
	EOF;

// Rule ComponentClass
ruleComponentClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClassAccess().getComponentclassReactFunctionsParserRuleCall_0_0());
				}
				lv_componentclass_0_0=ruleReactFunctions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClassRule());
					}
					add(
						$current,
						"componentclass",
						lv_componentclass_0_0,
						"org.xtext.example.mydsl.MyDsl.ReactFunctions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClassAccess().getComponentclassPropsParserRuleCall_1_0());
				}
				lv_componentclass_1_0=ruleProps
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClassRule());
					}
					add(
						$current,
						"componentclass",
						lv_componentclass_1_0,
						"org.xtext.example.mydsl.MyDsl.Props");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReactFunctions
entryRuleReactFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactFunctionsRule()); }
	iv_ruleReactFunctions=ruleReactFunctions
	{ $current=$iv_ruleReactFunctions.current; }
	EOF;

// Rule ReactFunctions
ruleReactFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getReactFunctionsAccess().getComponentclassReactConstructorParserRuleCall_0_0());
				}
				lv_componentclass_0_0=ruleReactConstructor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactFunctionsRule());
					}
					add(
						$current,
						"componentclass",
						lv_componentclass_0_0,
						"org.xtext.example.mydsl.MyDsl.ReactConstructor");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactFunctionsAccess().getLifecycleclassReactLifeCycleParserRuleCall_1_0());
				}
				lv_lifecycleclass_1_0=ruleReactLifeCycle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactFunctionsRule());
					}
					add(
						$current,
						"lifecycleclass",
						lv_lifecycleclass_1_0,
						"org.xtext.example.mydsl.MyDsl.ReactLifeCycle");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getReactFunctionsAccess().getComponentclassReactCoreFunctionsParserRuleCall_2_0());
				}
				lv_componentclass_2_0=ruleReactCoreFunctions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactFunctionsRule());
					}
					add(
						$current,
						"componentclass",
						lv_componentclass_2_0,
						"org.xtext.example.mydsl.MyDsl.ReactCoreFunctions");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getReactFunctionsAccess().getRenderclassReactRenderParserRuleCall_3_0());
				}
				lv_renderclass_3_0=ruleReactRender
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactFunctionsRule());
					}
					add(
						$current,
						"renderclass",
						lv_renderclass_3_0,
						"org.xtext.example.mydsl.MyDsl.ReactRender");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReactConstructor
entryRuleReactConstructor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactConstructorRule()); }
	iv_ruleReactConstructor=ruleReactConstructor
	{ $current=$iv_ruleReactConstructor.current; }
	EOF;

// Rule ReactConstructor
ruleReactConstructor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Constructor'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactConstructorAccess().getConstructorKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactConstructorAccess().getComponentclassStateParserRuleCall_1_0());
				}
				lv_componentclass_1_0=ruleState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactConstructorRule());
					}
					add(
						$current,
						"componentclass",
						lv_componentclass_1_0,
						"org.xtext.example.mydsl.MyDsl.State");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactConstructorAccess().getComponentclassCoreFunctionsDeclarationParserRuleCall_2_0());
				}
				lv_componentclass_2_0=ruleCoreFunctionsDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactConstructorRule());
					}
					add(
						$current,
						"componentclass",
						lv_componentclass_2_0,
						"org.xtext.example.mydsl.MyDsl.CoreFunctionsDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='State'
		{
			newLeafNode(otherlv_0, grammarAccess.getStateAccess().getStateKeyword_0());
		}
		(
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStateRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getStateAccess().getComponentclassDataTypeParserRuleCall_1_1_0());
					}
					lv_componentclass_2_0=ruleDataType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStateRule());
						}
						add(
							$current,
							"componentclass",
							lv_componentclass_2_0,
							"org.xtext.example.mydsl.MyDsl.DataType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current.getText(); }
	EOF;

// Rule DataType
ruleDataType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='String'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDataTypeAccess().getStringKeyword_0());
		}
		    |
		kw='Array'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDataTypeAccess().getArrayKeyword_1());
		}
		    |
		kw='Object'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDataTypeAccess().getObjectKeyword_2());
		}
		    |
		kw='Number'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDataTypeAccess().getNumberKeyword_3());
		}
		    |
		kw='null'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDataTypeAccess().getNullKeyword_4());
		}
		    |
		kw='Boolean'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDataTypeAccess().getBooleanKeyword_5());
		}
	)
;

// Entry rule entryRuleCoreFunctionsDeclaration
entryRuleCoreFunctionsDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCoreFunctionsDeclarationRule()); }
	iv_ruleCoreFunctionsDeclaration=ruleCoreFunctionsDeclaration
	{ $current=$iv_ruleCoreFunctionsDeclaration.current; }
	EOF;

// Rule CoreFunctionsDeclaration
ruleCoreFunctionsDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCoreFunctionsDeclarationAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCoreFunctionsDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='FunctionBindingDeclaration'
		{
			newLeafNode(otherlv_1, grammarAccess.getCoreFunctionsDeclarationAccess().getFunctionBindingDeclarationKeyword_1());
		}
	)
;

// Entry rule entryRuleReactLifeCycle
entryRuleReactLifeCycle returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReactLifeCycleRule()); }
	iv_ruleReactLifeCycle=ruleReactLifeCycle
	{ $current=$iv_ruleReactLifeCycle.current.getText(); }
	EOF;

// Rule ReactLifeCycle
ruleReactLifeCycle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='ComponentDidMount'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getReactLifeCycleAccess().getComponentDidMountKeyword_0_0());
			}
			kw='FunctionStructure'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getReactLifeCycleAccess().getFunctionStructureKeyword_0_1());
			}
		)
		    |
		(
			kw='ComponentDidUpdate'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getReactLifeCycleAccess().getComponentDidUpdateKeyword_1_0());
			}
			kw='FunctionStructure'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getReactLifeCycleAccess().getFunctionStructureKeyword_1_1());
			}
		)
		    |
		(
			kw='ComponentWillUnmount'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getReactLifeCycleAccess().getComponentWillUnmountKeyword_2_0());
			}
			kw='FunctionStructure'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getReactLifeCycleAccess().getFunctionStructureKeyword_2_1());
			}
		)
	)
;

// Entry rule entryRuleReactRender
entryRuleReactRender returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReactRenderRule()); }
	iv_ruleReactRender=ruleReactRender
	{ $current=$iv_ruleReactRender.current.getText(); }
	EOF;

// Rule ReactRender
ruleReactRender returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Render'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactRenderAccess().getRenderKeyword_0());
		}
		kw='RenderContent'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactRenderAccess().getRenderContentKeyword_1());
		}
	)
;

// Entry rule entryRuleProps
entryRuleProps returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropsRule()); }
	iv_ruleProps=ruleProps
	{ $current=$iv_ruleProps.current; }
	EOF;

// Rule Props
ruleProps returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Props'
		{
			newLeafNode(otherlv_0, grammarAccess.getPropsAccess().getPropsKeyword_0());
		}
		(
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getPropsAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPropsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPropsAccess().getComponentclassDataTypeParserRuleCall_1_1_0());
					}
					lv_componentclass_2_0=ruleDataType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropsRule());
						}
						add(
							$current,
							"componentclass",
							lv_componentclass_2_0,
							"org.xtext.example.mydsl.MyDsl.DataType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleReactCoreFunctions
entryRuleReactCoreFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactCoreFunctionsRule()); }
	iv_ruleReactCoreFunctions=ruleReactCoreFunctions
	{ $current=$iv_ruleReactCoreFunctions.current; }
	EOF;

// Rule ReactCoreFunctions
ruleReactCoreFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getReactCoreFunctionsAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactCoreFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='FunctionStructure'
		{
			newLeafNode(otherlv_1, grammarAccess.getReactCoreFunctionsAccess().getFunctionStructureKeyword_1());
		}
	)
;

// Entry rule entryRuleReactActions
entryRuleReactActions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactActionsRule()); }
	iv_ruleReactActions=ruleReactActions
	{ $current=$iv_ruleReactActions.current; }
	EOF;

// Rule ReactActions
ruleReactActions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ReactActions'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactActionsAccess().getReactActionsKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getReactActionsAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactActionsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactActionsAccess().getReactactcontentReactActionsContentParserRuleCall_3_0());
				}
				lv_reactactcontent_3_0=ruleReactActionsContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactActionsRule());
					}
					add(
						$current,
						"reactactcontent",
						lv_reactactcontent_3_0,
						"org.xtext.example.mydsl.MyDsl.ReactActionsContent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getReactActionsAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleReactActionsContent
entryRuleReactActionsContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactActionsContentRule()); }
	iv_ruleReactActionsContent=ruleReactActionsContent
	{ $current=$iv_ruleReactActionsContent.current; }
	EOF;

// Rule ReactActionsContent
ruleReactActionsContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getReactActionsContentAccess().getReactrelcontentReactServicesRelationParserRuleCall_0());
			}
			lv_reactrelcontent_0_0=ruleReactServicesRelation
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getReactActionsContentRule());
				}
				add(
					$current,
					"reactrelcontent",
					lv_reactrelcontent_0_0,
					"org.xtext.example.mydsl.MyDsl.ReactServicesRelation");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleReactServicesType
entryRuleReactServicesType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactServicesTypeRule()); }
	iv_ruleReactServicesType=ruleReactServicesType
	{ $current=$iv_ruleReactServicesType.current; }
	EOF;

// Rule ReactServicesType
ruleReactServicesType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ServiceType'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactServicesTypeAccess().getServiceTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReactServicesTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactServicesTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='ServiceContent'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactServicesTypeAccess().getServiceContentKeyword_2());
		}
	)
;

// Entry rule entryRuleReactServicesRelation
entryRuleReactServicesRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactServicesRelationRule()); }
	iv_ruleReactServicesRelation=ruleReactServicesRelation
	{ $current=$iv_ruleReactServicesRelation.current; }
	EOF;

// Rule ReactServicesRelation
ruleReactServicesRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ServicesRelations'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactServicesRelationAccess().getServicesRelationsKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getReactServicesRelationAccess().getReactrelationcontentReactServicesTypeParserRuleCall_1_0_0());
					}
					lv_reactrelationcontent_1_0=ruleReactServicesType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReactServicesRelationRule());
						}
						add(
							$current,
							"reactrelationcontent",
							lv_reactrelationcontent_1_0,
							"org.xtext.example.mydsl.MyDsl.ReactServicesType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getReactServicesRelationAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getReactServicesRelationRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			{
				newCompositeNode(grammarAccess.getReactServicesRelationAccess().getReactRequestParserRuleCall_1_2());
			}
			ruleReactRequest
			{
				afterParserOrEnumRuleCall();
			}
		)+
	)
;

// Entry rule entryRuleReactRequest
entryRuleReactRequest returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReactRequestRule()); }
	iv_ruleReactRequest=ruleReactRequest
	{ $current=$iv_ruleReactRequest.current.getText(); }
	EOF;

// Rule ReactRequest
ruleReactRequest returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Wrapper'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactRequestAccess().getWrapperKeyword_0());
		}
		    |
		kw='AuxWrapper'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactRequestAccess().getAuxWrapperKeyword_1());
		}
	)
;

// Entry rule entryRuleReactLibraries
entryRuleReactLibraries returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactLibrariesRule()); }
	iv_ruleReactLibraries=ruleReactLibraries
	{ $current=$iv_ruleReactLibraries.current; }
	EOF;

// Rule ReactLibraries
ruleReactLibraries returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ReactLibraries'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactLibrariesAccess().getReactLibrariesKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getReactLibrariesAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactLibrariesAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactLibrariesAccess().getReactlibrariesReactLibraryParserRuleCall_3_0());
				}
				lv_reactlibraries_3_0=ruleReactLibrary
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactLibrariesRule());
					}
					add(
						$current,
						"reactlibraries",
						lv_reactlibraries_3_0,
						"org.xtext.example.mydsl.MyDsl.ReactLibrary");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getReactLibrariesAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleReactLibrary
entryRuleReactLibrary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactLibraryRule()); }
	iv_ruleReactLibrary=ruleReactLibrary
	{ $current=$iv_ruleReactLibrary.current; }
	EOF;

// Rule ReactLibrary
ruleReactLibrary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getReactLibraryAccess().getReactLibraryTypeParserRuleCall_0());
		}
		ruleReactLibraryType
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReactLibraryAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactLibraryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='LibraryContent'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactLibraryAccess().getLibraryContentKeyword_2());
		}
	)
;

// Entry rule entryRuleReactLibraryType
entryRuleReactLibraryType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReactLibraryTypeRule()); }
	iv_ruleReactLibraryType=ruleReactLibraryType
	{ $current=$iv_ruleReactLibraryType.current.getText(); }
	EOF;

// Rule ReactLibraryType
ruleReactLibraryType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='ReactDesign'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactLibraryTypeAccess().getReactDesignKeyword_0());
		}
		    |
		kw='ReactRouting'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactLibraryTypeAccess().getReactRoutingKeyword_1());
		}
		    |
		kw='ComponentManagement'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactLibraryTypeAccess().getComponentManagementKeyword_2());
		}
		    |
		kw='StoreManagement'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactLibraryTypeAccess().getStoreManagementKeyword_3());
		}
		    |
		kw='ReactDeployment'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactLibraryTypeAccess().getReactDeploymentKeyword_4());
		}
		    |
		kw='ConfigurationLibrary'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactLibraryTypeAccess().getConfigurationLibraryKeyword_5());
		}
	)
;

// Entry rule entryRuleReactInfo
entryRuleReactInfo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactInfoRule()); }
	iv_ruleReactInfo=ruleReactInfo
	{ $current=$iv_ruleReactInfo.current; }
	EOF;

// Rule ReactInfo
ruleReactInfo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ReactInformation'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactInfoAccess().getReactInformationKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getReactInfoAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactInfoAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactInfoAccess().getReactinformationReactInformationParserRuleCall_3_0());
				}
				lv_reactinformation_3_0=ruleReactInformation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactInfoRule());
					}
					add(
						$current,
						"reactinformation",
						lv_reactinformation_3_0,
						"org.xtext.example.mydsl.MyDsl.ReactInformation");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getReactInfoAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleReactInformation
entryRuleReactInformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactInformationRule()); }
	iv_ruleReactInformation=ruleReactInformation
	{ $current=$iv_ruleReactInformation.current; }
	EOF;

// Rule ReactInformation
ruleReactInformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getReactInformationAccess().getReactInformationTypeParserRuleCall_0());
		}
		ruleReactInformationType
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReactInformationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactInformationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='InformationContent'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactInformationAccess().getInformationContentKeyword_2());
		}
	)
;

// Entry rule entryRuleReactInformationType
entryRuleReactInformationType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReactInformationTypeRule()); }
	iv_ruleReactInformationType=ruleReactInformationType
	{ $current=$iv_ruleReactInformationType.current.getText(); }
	EOF;

// Rule ReactInformationType
ruleReactInformationType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='ReactReadme'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactInformationTypeAccess().getReactReadmeKeyword_0());
		}
		    |
		kw='ReactAditionalInfo'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactInformationTypeAccess().getReactAditionalInfoKeyword_1());
		}
	)
;

// Entry rule entryRuleSpring
entryRuleSpring returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpringRule()); }
	iv_ruleSpring=ruleSpring
	{ $current=$iv_ruleSpring.current; }
	EOF;

// Rule Spring
ruleSpring returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Spring'
		{
			newLeafNode(otherlv_0, grammarAccess.getSpringAccess().getSpringKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSpringAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpringRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePostgreSQL
entryRulePostgreSQL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostgreSQLRule()); }
	iv_rulePostgreSQL=rulePostgreSQL
	{ $current=$iv_rulePostgreSQL.current; }
	EOF;

// Rule PostgreSQL
rulePostgreSQL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PostgreSQL'
		{
			newLeafNode(otherlv_0, grammarAccess.getPostgreSQLAccess().getPostgreSQLKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPostgreSQLAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPostgreSQLRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAmazonWebServices
entryRuleAmazonWebServices returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAmazonWebServicesRule()); }
	iv_ruleAmazonWebServices=ruleAmazonWebServices
	{ $current=$iv_ruleAmazonWebServices.current; }
	EOF;

// Rule AmazonWebServices
ruleAmazonWebServices returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AmazonWebServices'
		{
			newLeafNode(otherlv_0, grammarAccess.getAmazonWebServicesAccess().getAmazonWebServicesKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAmazonWebServicesAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAmazonWebServicesRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
