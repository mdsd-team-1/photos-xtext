/**
 * generated by Xtext 2.18.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.mydsl.myDsl.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MyDslFactoryImpl extends EFactoryImpl implements MyDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static MyDslFactory init()
  {
    try
    {
      MyDslFactory theMyDslFactory = (MyDslFactory)EPackage.Registry.INSTANCE.getEFactory(MyDslPackage.eNS_URI);
      if (theMyDslFactory != null)
      {
        return theMyDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new MyDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case MyDslPackage.MODEL: return createModel();
      case MyDslPackage.DOMAIN: return createDomain();
      case MyDslPackage.ENTITY: return createEntity();
      case MyDslPackage.ENTITIES: return createEntities();
      case MyDslPackage.PHOTO: return createPhoto();
      case MyDslPackage.ALBUM: return createAlbum();
      case MyDslPackage.USER_DOMAIN: return createUserDomain();
      case MyDslPackage.FUNCTIONALITY: return createFunctionality();
      case MyDslPackage.FUNCTIONALITIES: return createFunctionalities();
      case MyDslPackage.PROFILE_MANAGEMENT: return createProfileManagement();
      case MyDslPackage.PROFILE_MANAGEMENT_FUNCTIONS: return createProfileManagementFunctions();
      case MyDslPackage.APP_ACCESS: return createAppAccess();
      case MyDslPackage.APP_ACCESS_FUNCTIONS: return createAppAccessFunctions();
      case MyDslPackage.ALBUM_MANAGEMENT: return createAlbumManagement();
      case MyDslPackage.ALBUM_MANAGEMENT_FUNCTIONS: return createAlbumManagementFunctions();
      case MyDslPackage.PHOTO_ACTIONS: return createPhotoActions();
      case MyDslPackage.PHOTO_ACTIONS_FUNCTIONS: return createPhotoActionsFunctions();
      case MyDslPackage.LANDING_ACTIONS: return createLandingActions();
      case MyDslPackage.LANDING_FUNCTIONS: return createLandingFunctions();
      case MyDslPackage.DOMAIN_CONNECTION: return createDomainConnection();
      case MyDslPackage.DOMAIN_RELATIONS: return createDomainRelations();
      case MyDslPackage.ARCHITECTURE: return createArchitecture();
      case MyDslPackage.TECHNOLOGY: return createTechnology();
      case MyDslPackage.TECHNOLOGIES: return createTechnologies();
      case MyDslPackage.REACT: return createReact();
      case MyDslPackage.REACT_MODULES: return createReactModules();
      case MyDslPackage.REACT_SUB_MODULES: return createReactSubModules();
      case MyDslPackage.REACT_CONFIGURATION: return createReactConfiguration();
      case MyDslPackage.REACT_DEPENDENCIES: return createReactDependencies();
      case MyDslPackage.REACT_DEPENDENCIES_RULES: return createReactDependenciesRules();
      case MyDslPackage.REACT_DEPENDENCIES_SUB_RULES: return createReactDependenciesSubRules();
      case MyDslPackage.SINGLE_DEPENDENCIES: return createSingleDependencies();
      case MyDslPackage.PACKAGE_NAME: return createPackageName();
      case MyDslPackage.PACKAGE_VERSION: return createPackageVersion();
      case MyDslPackage.REACT_CONFIGURATIONS: return createReactConfigurations();
      case MyDslPackage.REACT_COMPONENTS: return createReactComponents();
      case MyDslPackage.COMPONENTS_LOGIC: return createComponentsLogic();
      case MyDslPackage.COMPONENTS_UI: return createComponentsUI();
      case MyDslPackage.REACT_ACTIONS: return createReactActions();
      case MyDslPackage.REACT_LIBRARIES: return createReactLibraries();
      case MyDslPackage.REACT_INFO: return createReactInfo();
      case MyDslPackage.SPRING: return createSpring();
      case MyDslPackage.POSTGRE_SQL: return createPostgreSQL();
      case MyDslPackage.AMAZON_WEB_SERVICES: return createAmazonWebServices();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Domain createDomain()
  {
    DomainImpl domain = new DomainImpl();
    return domain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entity createEntity()
  {
    EntityImpl entity = new EntityImpl();
    return entity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entities createEntities()
  {
    EntitiesImpl entities = new EntitiesImpl();
    return entities;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Photo createPhoto()
  {
    PhotoImpl photo = new PhotoImpl();
    return photo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Album createAlbum()
  {
    AlbumImpl album = new AlbumImpl();
    return album;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UserDomain createUserDomain()
  {
    UserDomainImpl userDomain = new UserDomainImpl();
    return userDomain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Functionality createFunctionality()
  {
    FunctionalityImpl functionality = new FunctionalityImpl();
    return functionality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Functionalities createFunctionalities()
  {
    FunctionalitiesImpl functionalities = new FunctionalitiesImpl();
    return functionalities;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProfileManagement createProfileManagement()
  {
    ProfileManagementImpl profileManagement = new ProfileManagementImpl();
    return profileManagement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProfileManagementFunctions createProfileManagementFunctions()
  {
    ProfileManagementFunctionsImpl profileManagementFunctions = new ProfileManagementFunctionsImpl();
    return profileManagementFunctions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AppAccess createAppAccess()
  {
    AppAccessImpl appAccess = new AppAccessImpl();
    return appAccess;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AppAccessFunctions createAppAccessFunctions()
  {
    AppAccessFunctionsImpl appAccessFunctions = new AppAccessFunctionsImpl();
    return appAccessFunctions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AlbumManagement createAlbumManagement()
  {
    AlbumManagementImpl albumManagement = new AlbumManagementImpl();
    return albumManagement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AlbumManagementFunctions createAlbumManagementFunctions()
  {
    AlbumManagementFunctionsImpl albumManagementFunctions = new AlbumManagementFunctionsImpl();
    return albumManagementFunctions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PhotoActions createPhotoActions()
  {
    PhotoActionsImpl photoActions = new PhotoActionsImpl();
    return photoActions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PhotoActionsFunctions createPhotoActionsFunctions()
  {
    PhotoActionsFunctionsImpl photoActionsFunctions = new PhotoActionsFunctionsImpl();
    return photoActionsFunctions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LandingActions createLandingActions()
  {
    LandingActionsImpl landingActions = new LandingActionsImpl();
    return landingActions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LandingFunctions createLandingFunctions()
  {
    LandingFunctionsImpl landingFunctions = new LandingFunctionsImpl();
    return landingFunctions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DomainConnection createDomainConnection()
  {
    DomainConnectionImpl domainConnection = new DomainConnectionImpl();
    return domainConnection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DomainRelations createDomainRelations()
  {
    DomainRelationsImpl domainRelations = new DomainRelationsImpl();
    return domainRelations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Architecture createArchitecture()
  {
    ArchitectureImpl architecture = new ArchitectureImpl();
    return architecture;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Technology createTechnology()
  {
    TechnologyImpl technology = new TechnologyImpl();
    return technology;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Technologies createTechnologies()
  {
    TechnologiesImpl technologies = new TechnologiesImpl();
    return technologies;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public React createReact()
  {
    ReactImpl react = new ReactImpl();
    return react;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactModules createReactModules()
  {
    ReactModulesImpl reactModules = new ReactModulesImpl();
    return reactModules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactSubModules createReactSubModules()
  {
    ReactSubModulesImpl reactSubModules = new ReactSubModulesImpl();
    return reactSubModules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactConfiguration createReactConfiguration()
  {
    ReactConfigurationImpl reactConfiguration = new ReactConfigurationImpl();
    return reactConfiguration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactDependencies createReactDependencies()
  {
    ReactDependenciesImpl reactDependencies = new ReactDependenciesImpl();
    return reactDependencies;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactDependenciesRules createReactDependenciesRules()
  {
    ReactDependenciesRulesImpl reactDependenciesRules = new ReactDependenciesRulesImpl();
    return reactDependenciesRules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactDependenciesSubRules createReactDependenciesSubRules()
  {
    ReactDependenciesSubRulesImpl reactDependenciesSubRules = new ReactDependenciesSubRulesImpl();
    return reactDependenciesSubRules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SingleDependencies createSingleDependencies()
  {
    SingleDependenciesImpl singleDependencies = new SingleDependenciesImpl();
    return singleDependencies;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PackageName createPackageName()
  {
    PackageNameImpl packageName = new PackageNameImpl();
    return packageName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PackageVersion createPackageVersion()
  {
    PackageVersionImpl packageVersion = new PackageVersionImpl();
    return packageVersion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactConfigurations createReactConfigurations()
  {
    ReactConfigurationsImpl reactConfigurations = new ReactConfigurationsImpl();
    return reactConfigurations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactComponents createReactComponents()
  {
    ReactComponentsImpl reactComponents = new ReactComponentsImpl();
    return reactComponents;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ComponentsLogic createComponentsLogic()
  {
    ComponentsLogicImpl componentsLogic = new ComponentsLogicImpl();
    return componentsLogic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ComponentsUI createComponentsUI()
  {
    ComponentsUIImpl componentsUI = new ComponentsUIImpl();
    return componentsUI;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactActions createReactActions()
  {
    ReactActionsImpl reactActions = new ReactActionsImpl();
    return reactActions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactLibraries createReactLibraries()
  {
    ReactLibrariesImpl reactLibraries = new ReactLibrariesImpl();
    return reactLibraries;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactInfo createReactInfo()
  {
    ReactInfoImpl reactInfo = new ReactInfoImpl();
    return reactInfo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Spring createSpring()
  {
    SpringImpl spring = new SpringImpl();
    return spring;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PostgreSQL createPostgreSQL()
  {
    PostgreSQLImpl postgreSQL = new PostgreSQLImpl();
    return postgreSQL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AmazonWebServices createAmazonWebServices()
  {
    AmazonWebServicesImpl amazonWebServices = new AmazonWebServicesImpl();
    return amazonWebServices;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MyDslPackage getMyDslPackage()
  {
    return (MyDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static MyDslPackage getPackage()
  {
    return MyDslPackage.eINSTANCE;
  }

} //MyDslFactoryImpl
