/**
 * generated by Xtext 2.18.0
 */
package org.xtext.example.mydsl.myDsl.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.example.mydsl.myDsl.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.myDsl.MyDslPackage
 * @generated
 */
public class MyDslSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static MyDslPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = MyDslPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case MyDslPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.DOMAIN:
      {
        Domain domain = (Domain)theEObject;
        T result = caseDomain(domain);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.ENTITY:
      {
        Entity entity = (Entity)theEObject;
        T result = caseEntity(entity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.ENTITIES:
      {
        Entities entities = (Entities)theEObject;
        T result = caseEntities(entities);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.PHOTO:
      {
        Photo photo = (Photo)theEObject;
        T result = casePhoto(photo);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.ALBUM:
      {
        Album album = (Album)theEObject;
        T result = caseAlbum(album);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.USER_DOMAIN:
      {
        UserDomain userDomain = (UserDomain)theEObject;
        T result = caseUserDomain(userDomain);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.FUNCTIONALITY:
      {
        Functionality functionality = (Functionality)theEObject;
        T result = caseFunctionality(functionality);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.FUNCTIONALITIES:
      {
        Functionalities functionalities = (Functionalities)theEObject;
        T result = caseFunctionalities(functionalities);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.PROFILE_MANAGEMENT:
      {
        ProfileManagement profileManagement = (ProfileManagement)theEObject;
        T result = caseProfileManagement(profileManagement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.PROFILE_MANAGEMENT_FUNCTIONS:
      {
        ProfileManagementFunctions profileManagementFunctions = (ProfileManagementFunctions)theEObject;
        T result = caseProfileManagementFunctions(profileManagementFunctions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.APP_ACCESS:
      {
        AppAccess appAccess = (AppAccess)theEObject;
        T result = caseAppAccess(appAccess);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.APP_ACCESS_FUNCTIONS:
      {
        AppAccessFunctions appAccessFunctions = (AppAccessFunctions)theEObject;
        T result = caseAppAccessFunctions(appAccessFunctions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.ALBUM_MANAGEMENT:
      {
        AlbumManagement albumManagement = (AlbumManagement)theEObject;
        T result = caseAlbumManagement(albumManagement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.ALBUM_MANAGEMENT_FUNCTIONS:
      {
        AlbumManagementFunctions albumManagementFunctions = (AlbumManagementFunctions)theEObject;
        T result = caseAlbumManagementFunctions(albumManagementFunctions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.PHOTO_ACTIONS:
      {
        PhotoActions photoActions = (PhotoActions)theEObject;
        T result = casePhotoActions(photoActions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.PHOTO_ACTIONS_FUNCTIONS:
      {
        PhotoActionsFunctions photoActionsFunctions = (PhotoActionsFunctions)theEObject;
        T result = casePhotoActionsFunctions(photoActionsFunctions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.LANDING_ACTIONS:
      {
        LandingActions landingActions = (LandingActions)theEObject;
        T result = caseLandingActions(landingActions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.LANDING_FUNCTIONS:
      {
        LandingFunctions landingFunctions = (LandingFunctions)theEObject;
        T result = caseLandingFunctions(landingFunctions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.DOMAIN_CONNECTION:
      {
        DomainConnection domainConnection = (DomainConnection)theEObject;
        T result = caseDomainConnection(domainConnection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.DOMAIN_RELATIONS:
      {
        DomainRelations domainRelations = (DomainRelations)theEObject;
        T result = caseDomainRelations(domainRelations);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.ARCHITECTURE:
      {
        Architecture architecture = (Architecture)theEObject;
        T result = caseArchitecture(architecture);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.TECHNOLOGY:
      {
        Technology technology = (Technology)theEObject;
        T result = caseTechnology(technology);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.TECHNOLOGIES:
      {
        Technologies technologies = (Technologies)theEObject;
        T result = caseTechnologies(technologies);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.REACT:
      {
        React react = (React)theEObject;
        T result = caseReact(react);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.REACT_MODULES:
      {
        ReactModules reactModules = (ReactModules)theEObject;
        T result = caseReactModules(reactModules);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.REACT_SUB_MODULES:
      {
        ReactSubModules reactSubModules = (ReactSubModules)theEObject;
        T result = caseReactSubModules(reactSubModules);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.REACT_CONFIGURATION:
      {
        ReactConfiguration reactConfiguration = (ReactConfiguration)theEObject;
        T result = caseReactConfiguration(reactConfiguration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.REACT_DEPENDENCIES:
      {
        ReactDependencies reactDependencies = (ReactDependencies)theEObject;
        T result = caseReactDependencies(reactDependencies);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.REACT_DEPENDENCIES_RULES:
      {
        ReactDependenciesRules reactDependenciesRules = (ReactDependenciesRules)theEObject;
        T result = caseReactDependenciesRules(reactDependenciesRules);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.REACT_DEPENDENCIES_SUB_RULES:
      {
        ReactDependenciesSubRules reactDependenciesSubRules = (ReactDependenciesSubRules)theEObject;
        T result = caseReactDependenciesSubRules(reactDependenciesSubRules);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.SINGLE_DEPENDENCIES:
      {
        SingleDependencies singleDependencies = (SingleDependencies)theEObject;
        T result = caseSingleDependencies(singleDependencies);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.PACKAGE_NAME:
      {
        PackageName packageName = (PackageName)theEObject;
        T result = casePackageName(packageName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.PACKAGE_VERSION:
      {
        PackageVersion packageVersion = (PackageVersion)theEObject;
        T result = casePackageVersion(packageVersion);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.REACT_CONFIGURATIONS:
      {
        ReactConfigurations reactConfigurations = (ReactConfigurations)theEObject;
        T result = caseReactConfigurations(reactConfigurations);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.REACT_COMPONENTS:
      {
        ReactComponents reactComponents = (ReactComponents)theEObject;
        T result = caseReactComponents(reactComponents);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.COMPONENTS_LOGIC:
      {
        ComponentsLogic componentsLogic = (ComponentsLogic)theEObject;
        T result = caseComponentsLogic(componentsLogic);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.COMPONENTS_UI:
      {
        ComponentsUI componentsUI = (ComponentsUI)theEObject;
        T result = caseComponentsUI(componentsUI);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.REACT_ACTIONS:
      {
        ReactActions reactActions = (ReactActions)theEObject;
        T result = caseReactActions(reactActions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.REACT_LIBRARIES:
      {
        ReactLibraries reactLibraries = (ReactLibraries)theEObject;
        T result = caseReactLibraries(reactLibraries);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.REACT_INFO:
      {
        ReactInfo reactInfo = (ReactInfo)theEObject;
        T result = caseReactInfo(reactInfo);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.SPRING:
      {
        Spring spring = (Spring)theEObject;
        T result = caseSpring(spring);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.POSTGRE_SQL:
      {
        PostgreSQL postgreSQL = (PostgreSQL)theEObject;
        T result = casePostgreSQL(postgreSQL);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.AMAZON_WEB_SERVICES:
      {
        AmazonWebServices amazonWebServices = (AmazonWebServices)theEObject;
        T result = caseAmazonWebServices(amazonWebServices);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Domain</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Domain</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDomain(Domain object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntity(Entity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entities</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entities</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntities(Entities object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Photo</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Photo</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePhoto(Photo object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Album</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Album</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAlbum(Album object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>User Domain</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>User Domain</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUserDomain(UserDomain object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Functionality</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Functionality</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFunctionality(Functionality object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Functionalities</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Functionalities</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFunctionalities(Functionalities object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Profile Management</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Profile Management</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProfileManagement(ProfileManagement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Profile Management Functions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Profile Management Functions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProfileManagementFunctions(ProfileManagementFunctions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>App Access</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>App Access</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAppAccess(AppAccess object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>App Access Functions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>App Access Functions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAppAccessFunctions(AppAccessFunctions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Album Management</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Album Management</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAlbumManagement(AlbumManagement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Album Management Functions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Album Management Functions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAlbumManagementFunctions(AlbumManagementFunctions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Photo Actions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Photo Actions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePhotoActions(PhotoActions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Photo Actions Functions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Photo Actions Functions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePhotoActionsFunctions(PhotoActionsFunctions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Landing Actions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Landing Actions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLandingActions(LandingActions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Landing Functions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Landing Functions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLandingFunctions(LandingFunctions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Domain Connection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Domain Connection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDomainConnection(DomainConnection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Domain Relations</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Domain Relations</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDomainRelations(DomainRelations object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Architecture</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Architecture</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseArchitecture(Architecture object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Technology</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Technology</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTechnology(Technology object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Technologies</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Technologies</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTechnologies(Technologies object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>React</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>React</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReact(React object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>React Modules</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>React Modules</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReactModules(ReactModules object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>React Sub Modules</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>React Sub Modules</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReactSubModules(ReactSubModules object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>React Configuration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>React Configuration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReactConfiguration(ReactConfiguration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>React Dependencies</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>React Dependencies</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReactDependencies(ReactDependencies object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>React Dependencies Rules</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>React Dependencies Rules</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReactDependenciesRules(ReactDependenciesRules object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>React Dependencies Sub Rules</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>React Dependencies Sub Rules</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReactDependenciesSubRules(ReactDependenciesSubRules object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Single Dependencies</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Single Dependencies</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSingleDependencies(SingleDependencies object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Package Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Package Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePackageName(PackageName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Package Version</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Package Version</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePackageVersion(PackageVersion object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>React Configurations</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>React Configurations</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReactConfigurations(ReactConfigurations object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>React Components</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>React Components</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReactComponents(ReactComponents object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Components Logic</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Components Logic</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComponentsLogic(ComponentsLogic object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Components UI</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Components UI</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComponentsUI(ComponentsUI object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>React Actions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>React Actions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReactActions(ReactActions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>React Libraries</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>React Libraries</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReactLibraries(ReactLibraries object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>React Info</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>React Info</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReactInfo(ReactInfo object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Spring</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Spring</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSpring(Spring object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Postgre SQL</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Postgre SQL</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePostgreSQL(PostgreSQL object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Amazon Web Services</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Amazon Web Services</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAmazonWebServices(AmazonWebServices object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //MyDslSwitch
