System: {
	Domain SoftGallery: { 
		Entities: {
			Photo Ferrari
			Album Cars
			UserDomain Pedro
		}
		Functionalities : {
			ProfileManagement:
				ViewProfilePhoto verFoto
				EditProfileInfo editarPerfil
			AppAccess:
				Login ingreso
				Register registro
			AlbumManagement: 
				CreateAlbum crearAlbum
				SelectAlbum seleccionarAlbum 
			PhotoActions:
				ViewAllPhotos verTodasLasFotos
				ViewExtendedPhoto verUnicaFoto
				LoadPhoto cargarFoto
			LandingActions:
				ViewCarousel verCarrusel
				PassPhoto pasarFoto
		}
		DomainRelations: {
			UserDomain UsuarioEjemplo realiza: {
				ProfileManagement:
					ViewProfilePhoto verFoto
					EditProfileInfo editarPerfil
				AppAccess:
					Login ingreso
					Register registro
				AlbumManagement:
					CreateAlbum crearAlbum
					SelectAlbum seleccionarAlbum
				PhotoActions:
					ViewAllPhotos verTodasLasFotos
					ViewExtendedPhoto verUnicaFoto
					LoadPhoto cargarFoto
				LandingActions:
					ViewCarousel verCarrusel
					PassPhoto pasarFoto
				}
			Album ExampleCart 
				seVincula: {
					CreateAlbum crearAlbum
					SelectAlbum seleccionarAlbum
				}
			Photo ExamplePhoto seRelaciona:{
				ViewAllPhotos verTodasLasFotos
				ViewExtendedPhoto verUnicaFoto
				LoadPhoto cargarFoto
			}
			PhotoActions:
				ViewAllPhotos verTodasLasFotos
				ViewExtendedPhoto verUnicaFoto
				LoadPhoto cargarFoto
					esNecesario: {
						AlbumManagement:
							CreateAlbum crearAlbum
							SelectAlbum seleccionarAlbum
				} 
			
		} 	
	}
	Architecture: {
		Layered
	}
	Technology name: {
		Spring SpringExample
		React ReactJS : {
			ReactModules: {
				ReactConfiguration : {
					DependenciesStruct
						DependencyType Design
							PackageName antd
							PackageVersion version1
						DependencyType RouteDOM
							PackageName routedom
							PackageVersion version12
					ReactDOMConfigurations Configurations
						RoutingConf routes
				}
				ReactComponents : {
					LogicComponents componentesLogicos
						RoutingComponents component
							AppComponent Appjs
								Constructor
									State name
									FunctionBindingDeclaration
								ComponentDidMount
									FunctionStructure
								setData
									FunctionStructure
								Render
									RenderContent 								
								Props 
									props String
									props2 String
							IndexComponent indexjs
					UIComponents componentesVisuales
						ViewComponent upload
							Constructor
									State name
									FunctionBindingDeclaration
								Render
									RenderContent 								
								Props 
									props String
									props2 String
						Subcomponents FieldTitle
							Constructor
									State name
									FunctionBindingDeclaration
								Render
									RenderContent 								
								Props 
									props String
									props2 String
				}		 						
				ReactActions: { 
					ServicesRelations
						ServiceType login ServiceContent relacionadoCon Wrapper
						ServiceType login ServiceContent relacionadoCon AuxWrapper		
				}	
				ReactLibraries: {
					 ReactDesign antd
					 	LibraryContent
				}
				ReactInformation : {
					ReactReadme readme
						InformationContent
				}
			}
		}	 
		PostgreSQL postgreSQL
		AmazonWebServices AmazonExample
	}
}