/*
 * generated by Xtext 2.17.1
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.photos.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.photos.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.photos.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementsDomainParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleDomain
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"org.xtext.photos.mydsl.MyDsl.Domain");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementsArchitectureParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleArchitecture
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.photos.mydsl.MyDsl.Architecture");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementsTechnologyParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleTechnology
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"org.xtext.photos.mydsl.MyDsl.Technology");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDomain
entryRuleDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainRule()); }
	iv_ruleDomain=ruleDomain
	{ $current=$iv_ruleDomain.current; }
	EOF;

// Rule Domain
ruleDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Domain:'
		{
			newLeafNode(otherlv_0, grammarAccess.getDomainAccess().getDomainKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDomainAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDomainRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDomainAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainAccess().getElementsEntityParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"org.xtext.photos.mydsl.MyDsl.Entity");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainAccess().getElementsFunctionalityParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleFunctionality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"org.xtext.photos.mydsl.MyDsl.Functionality");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getDomainAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleArchitecture
entryRuleArchitecture returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArchitectureRule()); }
	iv_ruleArchitecture=ruleArchitecture
	{ $current=$iv_ruleArchitecture.current; }
	EOF;

// Rule Architecture
ruleArchitecture returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Architecture:'
		{
			newLeafNode(otherlv_0, grammarAccess.getArchitectureAccess().getArchitectureKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getArchitectureAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getArchitectureAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArchitectureRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getArchitectureAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleTechnology
entryRuleTechnology returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTechnologyRule()); }
	iv_ruleTechnology=ruleTechnology
	{ $current=$iv_ruleTechnology.current; }
	EOF;

// Rule Technology
ruleTechnology returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Technology:'
		{
			newLeafNode(otherlv_0, grammarAccess.getTechnologyAccess().getTechnologyKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getTechnologyAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTechnologyAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTechnologyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getTechnologyAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Entities'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntitiesKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getElementsEntitiesParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleEntities
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.photos.mydsl.MyDsl.Entities");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionality
entryRuleFunctionality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionalityRule()); }
	iv_ruleFunctionality=ruleFunctionality
	{ $current=$iv_ruleFunctionality.current; }
	EOF;

// Rule Functionality
ruleFunctionality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Functionalities'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionalityAccess().getFunctionalitiesKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionalityAccess().getElementsFunctionalitiesParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleFunctionalities
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionalityRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.photos.mydsl.MyDsl.Functionalities");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEntities
entryRuleEntities returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntitiesRule()); }
	iv_ruleEntities=ruleEntities
	{ $current=$iv_ruleEntities.current; }
	EOF;

// Rule Entities
ruleEntities returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEntitiesAccess().getElementsPhotoParserRuleCall_0_0());
				}
				lv_elements_0_0=rulePhoto
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntitiesRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"org.xtext.photos.mydsl.MyDsl.Photo");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEntitiesAccess().getElementsAlbumParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleAlbum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntitiesRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.photos.mydsl.MyDsl.Album");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEntitiesAccess().getElementsUser_dParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleUser_d
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntitiesRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"org.xtext.photos.mydsl.MyDsl.User_d");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePhoto
entryRulePhoto returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhotoRule()); }
	iv_rulePhoto=rulePhoto
	{ $current=$iv_rulePhoto.current; }
	EOF;

// Rule Photo
rulePhoto returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Photo'
		{
			newLeafNode(otherlv_0, grammarAccess.getPhotoAccess().getPhotoKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPhotoAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPhotoRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAlbum
entryRuleAlbum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlbumRule()); }
	iv_ruleAlbum=ruleAlbum
	{ $current=$iv_ruleAlbum.current; }
	EOF;

// Rule Album
ruleAlbum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Album'
		{
			newLeafNode(otherlv_0, grammarAccess.getAlbumAccess().getAlbumKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAlbumAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAlbumRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleUser_d
entryRuleUser_d returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUser_dRule()); }
	iv_ruleUser_d=ruleUser_d
	{ $current=$iv_ruleUser_d.current; }
	EOF;

// Rule User_d
ruleUser_d returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='User_d'
		{
			newLeafNode(otherlv_0, grammarAccess.getUser_dAccess().getUser_dKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getUser_dAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUser_dRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionalities
entryRuleFunctionalities returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionalitiesRule()); }
	iv_ruleFunctionalities=ruleFunctionalities
	{ $current=$iv_ruleFunctionalities.current; }
	EOF;

// Rule Functionalities
ruleFunctionalities returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionalitiesAccess().getElementsProfileManagementParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleProfileManagement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionalitiesRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"org.xtext.photos.mydsl.MyDsl.ProfileManagement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionalitiesAccess().getElementsAppAccessParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleAppAccess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionalitiesRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.photos.mydsl.MyDsl.AppAccess");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionalitiesAccess().getElementsAlbumManagementParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleAlbumManagement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionalitiesRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"org.xtext.photos.mydsl.MyDsl.AlbumManagement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionalitiesAccess().getElementsPhotoActionsParserRuleCall_3_0());
				}
				lv_elements_3_0=rulePhotoActions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionalitiesRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"org.xtext.photos.mydsl.MyDsl.PhotoActions");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProfileManagement
entryRuleProfileManagement returns [String current=null]:
	{ newCompositeNode(grammarAccess.getProfileManagementRule()); }
	iv_ruleProfileManagement=ruleProfileManagement
	{ $current=$iv_ruleProfileManagement.current.getText(); }
	EOF;

// Rule ProfileManagement
ruleProfileManagement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='ProfileManagement'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getProfileManagementAccess().getProfileManagementKeyword());
	}
;

// Entry rule entryRuleAppAccess
entryRuleAppAccess returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAppAccessRule()); }
	iv_ruleAppAccess=ruleAppAccess
	{ $current=$iv_ruleAppAccess.current.getText(); }
	EOF;

// Rule AppAccess
ruleAppAccess returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='AppAccess'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getAppAccessAccess().getAppAccessKeyword());
	}
;

// Entry rule entryRuleAlbumManagement
entryRuleAlbumManagement returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAlbumManagementRule()); }
	iv_ruleAlbumManagement=ruleAlbumManagement
	{ $current=$iv_ruleAlbumManagement.current.getText(); }
	EOF;

// Rule AlbumManagement
ruleAlbumManagement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='AlbumManagement'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getAlbumManagementAccess().getAlbumManagementKeyword());
	}
;

// Entry rule entryRulePhotoActions
entryRulePhotoActions returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPhotoActionsRule()); }
	iv_rulePhotoActions=rulePhotoActions
	{ $current=$iv_rulePhotoActions.current.getText(); }
	EOF;

// Rule PhotoActions
rulePhotoActions returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='PhotoActions'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getPhotoActionsAccess().getPhotoActionsKeyword());
	}
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
